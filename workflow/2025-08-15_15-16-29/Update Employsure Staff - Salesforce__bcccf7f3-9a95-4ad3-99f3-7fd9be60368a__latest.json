{
  "nextTrackingNumber": 58,
  "defaultLanguage": "en-AU",
  "initialSequence": "b03c94b2-daac-4fe6-947b-ca362125d1a6",
  "name": "Update Employsure Staff - Salesforce",
  "uiMetaData": {
    "bridgeServerActions": [],
    "screenPops": [],
    "actionServiceActions": [
      {
        "id": "custom_-_dc0ff9ac-0869-42f3-9275-30b5b137488c",
        "name": "Get Email from User",
        "category": "Genesys Cloud Data Actions",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserID": {
                    "type": "string",
                    "name": "UserID",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "name": "address",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "type": "object",
          "properties": {
            "UserID": {
              "type": "string",
              "name": "UserID",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "name": "address",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      },
      {
        "id": "custom_-_97b2b3e0-d81e-484d-9127-b778693b1f20",
        "name": "Get ID From Employsure staff",
        "category": "Salesforce - Richard-Sandbox Instance",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "name": "Email",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "string",
                    "name": "Id",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "type": "object",
          "properties": {
            "Email": {
              "type": "string",
              "name": "Email",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string",
              "name": "Id",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      },
      {
        "id": "custom_-_db4c70dc-785b-4f71-b407-1e3e28432520",
        "name": "User Analytics Status (v5)",
        "category": "Chatbot Transcript",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "interval": {
                    "type": "string",
                    "name": "interval",
                    "required": false
                  },
                  "userid": {
                    "type": "string",
                    "name": "userid",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "qualifier": {
                    "type": "array",
                    "items": {
                      "title": "qualifier",
                      "type": "string"
                    },
                    "name": "qualifier",
                    "required": false
                  },
                  "count": {
                    "type": "array",
                    "items": {
                      "title": "count",
                      "type": "integer"
                    },
                    "name": "count",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "type": "object",
          "properties": {
            "interval": {
              "type": "string",
              "name": "interval",
              "required": false
            },
            "userid": {
              "type": "string",
              "name": "userid",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "type": "object",
          "properties": {
            "qualifier": {
              "type": "array",
              "items": {
                "title": "qualifier",
                "type": "string"
              },
              "name": "qualifier",
              "required": false
            },
            "count": {
              "type": "array",
              "items": {
                "title": "count",
                "type": "integer"
              },
              "name": "count",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      },
      {
        "id": "custom_-_5f39c7f2-90b8-4125-8428-58408d026cb5",
        "name": "User Analytics (v3)",
        "category": "Chatbot Transcript",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "interval": {
                    "type": "string",
                    "name": "interval",
                    "required": false
                  },
                  "userid": {
                    "type": "string",
                    "name": "userid",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer",
                    "name": "count",
                    "required": false
                  },
                  "sum": {
                    "type": "integer",
                    "name": "sum",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "type": "object",
          "properties": {
            "interval": {
              "type": "string",
              "name": "interval",
              "required": false
            },
            "userid": {
              "type": "string",
              "name": "userid",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "name": "count",
              "required": false
            },
            "sum": {
              "type": "integer",
              "name": "sum",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      },
      {
        "id": "custom_-_6e299969-3371-432b-a5af-47f610e24957",
        "name": "Insert Data Table Row - Agent Reporting",
        "category": "Chatbot Transcript",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Row update",
                "description": "A Row update",
                "type": "object",
                "required": [
                  "Key"
                ],
                "properties": {
                  "Key": {
                    "description": "Conversation ID",
                    "type": "string",
                    "name": "Key",
                    "required": true
                  },
                  "StartTime": {
                    "description": "Queue ID",
                    "type": "string",
                    "name": "StartTime",
                    "required": false
                  },
                  "RunTime": {
                    "description": "Lead ID",
                    "type": "string",
                    "name": "RunTime",
                    "required": false
                  },
                  "UserID": {
                    "type": "string",
                    "name": "UserID",
                    "required": false
                  },
                  "ON_Queue": {
                    "type": "string",
                    "name": "ON_Queue",
                    "required": false
                  },
                  "InteractionCount": {
                    "type": "string",
                    "name": "InteractionCount",
                    "required": false
                  },
                  "TalkTime": {
                    "type": "string",
                    "name": "TalkTime",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Row update",
                "description": "returns the new row",
                "type": "object",
                "properties": {
                  "Key": {
                    "description": "Tarjeta",
                    "type": "string",
                    "name": "Key",
                    "required": false
                  },
                  "StartTime": {
                    "description": "Telefono origen",
                    "type": "string",
                    "name": "StartTime",
                    "required": false
                  },
                  "RunTime": {
                    "type": "string",
                    "name": "RunTime",
                    "required": false
                  },
                  "UserID": {
                    "type": "string",
                    "name": "UserID",
                    "required": false
                  },
                  "ON_Queue": {
                    "type": "string",
                    "name": "ON_Queue",
                    "required": false
                  },
                  "InteractionCount": {
                    "type": "string",
                    "name": "InteractionCount",
                    "required": false
                  },
                  "TalkTime": {
                    "type": "string",
                    "name": "TalkTime",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Row update",
          "description": "A Row update",
          "type": "object",
          "required": [
            "Key"
          ],
          "properties": {
            "Key": {
              "description": "Conversation ID",
              "type": "string",
              "name": "Key",
              "required": true
            },
            "StartTime": {
              "description": "Queue ID",
              "type": "string",
              "name": "StartTime",
              "required": false
            },
            "RunTime": {
              "description": "Lead ID",
              "type": "string",
              "name": "RunTime",
              "required": false
            },
            "UserID": {
              "type": "string",
              "name": "UserID",
              "required": false
            },
            "ON_Queue": {
              "type": "string",
              "name": "ON_Queue",
              "required": false
            },
            "InteractionCount": {
              "type": "string",
              "name": "InteractionCount",
              "required": false
            },
            "TalkTime": {
              "type": "string",
              "name": "TalkTime",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Row update",
          "description": "returns the new row",
          "type": "object",
          "properties": {
            "Key": {
              "description": "Tarjeta",
              "type": "string",
              "name": "Key",
              "required": false
            },
            "StartTime": {
              "description": "Telefono origen",
              "type": "string",
              "name": "StartTime",
              "required": false
            },
            "RunTime": {
              "type": "string",
              "name": "RunTime",
              "required": false
            },
            "UserID": {
              "type": "string",
              "name": "UserID",
              "required": false
            },
            "ON_Queue": {
              "type": "string",
              "name": "ON_Queue",
              "required": false
            },
            "InteractionCount": {
              "type": "string",
              "name": "InteractionCount",
              "required": false
            },
            "TalkTime": {
              "type": "string",
              "name": "TalkTime",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      },
      {
        "id": "custom_-_de14fa00-68b8-43d3-8fce-24f7bd186d1d",
        "name": "Update objects - RD",
        "category": "Salesforce - Richard-Sandbox Instance",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Object ID Request",
                "description": "A object ID-based request.",
                "type": "object",
                "required": [
                  "Object_SF_Type",
                  "Object_SF_ID",
                  "Object_Field_Name",
                  "Object_Field_Value"
                ],
                "properties": {
                  "Object_SF_Type": {
                    "description": "The SF Object type to update",
                    "type": "string",
                    "name": "Object_SF_Type",
                    "required": true
                  },
                  "Object_SF_ID": {
                    "description": "The SF internal Object ID to update ",
                    "type": "string",
                    "name": "Object_SF_ID",
                    "required": true
                  },
                  "Object_Field_Name": {
                    "description": "The Salesforce Object field API name to update",
                    "type": "string",
                    "name": "Object_Field_Name",
                    "required": true
                  },
                  "Object_Field_Value": {
                    "description": "The value to update the Object field.",
                    "type": "string",
                    "name": "Object_Field_Value",
                    "required": true
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Object ID Request",
          "description": "A object ID-based request.",
          "type": "object",
          "required": [
            "Object_SF_Type",
            "Object_SF_ID",
            "Object_Field_Name",
            "Object_Field_Value"
          ],
          "properties": {
            "Object_SF_Type": {
              "description": "The SF Object type to update",
              "type": "string",
              "name": "Object_SF_Type",
              "required": true
            },
            "Object_SF_ID": {
              "description": "The SF internal Object ID to update ",
              "type": "string",
              "name": "Object_SF_ID",
              "required": true
            },
            "Object_Field_Name": {
              "description": "The Salesforce Object field API name to update",
              "type": "string",
              "name": "Object_Field_Name",
              "required": true
            },
            "Object_Field_Value": {
              "description": "The value to update the Object field.",
              "type": "string",
              "name": "Object_Field_Value",
              "required": true
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      },
      {
        "id": "custom_-_94ea84f6-16d0-4f6f-9339-f6df83567b8a",
        "name": "AgentLess Email (Prod) (v4)",
        "category": "Chatbot Transcript",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "title": "Object1",
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "name": "subject",
                    "required": false
                  },
                  "textbody": {
                    "type": "string",
                    "name": "textbody",
                    "required": false
                  },
                  "htmlbody": {
                    "type": "string",
                    "name": "htmlbody",
                    "required": false
                  },
                  "toemail": {
                    "type": "string",
                    "name": "toemail",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "title": "R",
                "type": "object",
                "properties": {},
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "title": "Object1",
          "type": "object",
          "properties": {
            "subject": {
              "type": "string",
              "name": "subject",
              "required": false
            },
            "textbody": {
              "type": "string",
              "name": "textbody",
              "required": false
            },
            "htmlbody": {
              "type": "string",
              "name": "htmlbody",
              "required": false
            },
            "toemail": {
              "type": "string",
              "name": "toemail",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "title": "R",
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      }
    ]
  },
  "supportedLanguages": [
    "en-AU"
  ],
  "manifest": {
    "dataAction": [
      {
        "name": "Update objects - RD",
        "id": "custom_-_de14fa00-68b8-43d3-8fce-24f7bd186d1d",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "80b126a4-4bd8-467e-957a-831a3ba90acb",
            "name": "Uploads data to SF"
          },
          {
            "actionName": "Call Data Action",
            "id": "6eaf2ac8-53f5-4d1c-b140-370cfc92c2e5",
            "name": "Uploads data to SF"
          },
          {
            "actionName": "Call Data Action",
            "id": "af76fb94-447c-4c6c-ba69-6476203934da",
            "name": "Uploads data to SF - ON_Queue"
          },
          {
            "actionName": "Call Data Action",
            "id": "48f2132d-40a3-48bd-acf7-52a487c993a6",
            "name": "Uploads data to SF -Total Handled Sum"
          }
        ]
      },
      {
        "name": "Get Email from User",
        "id": "custom_-_dc0ff9ac-0869-42f3-9275-30b5b137488c",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "4d80069f-d9f9-431b-a85f-ae69dbc00c83",
            "name": "Gets userID Var and converts to email"
          }
        ]
      },
      {
        "name": "Get ID From Employsure staff",
        "id": "custom_-_97b2b3e0-d81e-484d-9127-b778693b1f20",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "3ed56bfd-93f4-4e38-8907-28989f321f17",
            "name": "Converts Email to staffID"
          }
        ]
      },
      {
        "name": "User Analytics Status (v5)",
        "id": "custom_-_db4c70dc-785b-4f71-b407-1e3e28432520",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "1d911224-9616-4c01-874a-27f96b20245c",
            "name": "Gets Status data such as ON_Queue"
          }
        ]
      },
      {
        "name": "User Analytics (v3)",
        "id": "custom_-_5f39c7f2-90b8-4125-8428-58408d026cb5",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "d985c546-4a56-46f0-a910-42babb52e27e",
            "name": "Call Data Action"
          }
        ]
      },
      {
        "name": "Insert Data Table Row - Agent Reporting",
        "id": "custom_-_6e299969-3371-432b-a5af-47f610e24957",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "05fe7b15-bfe5-4706-b9fe-aeb52722d5e1",
            "name": "Call Data Action"
          }
        ]
      },
      {
        "name": "AgentLess Email (Prod) (v4)",
        "id": "custom_-_94ea84f6-16d0-4f6f-9339-f6df83567b8a",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "c61ab638-0cfe-490a-9e9c-6f86db921f3d",
            "name": "Call Data Action"
          }
        ]
      }
    ],
    "schedule": [
      {
        "name": "Run SF Data Push",
        "id": "1ad9ba85-030c-45c3-b3ad-9bd06a0a768d",
        "context": [
          {
            "actionName": "Evaluate Schedule",
            "id": "6b80e2a3-d915-4489-b369-19c6e0e41409",
            "name": "Evaluate Schedule"
          }
        ]
      }
    ],
    "language": [
      {
        "id": "en-AU"
      }
    ],
    "userPrompt": [],
    "systemPrompt": []
  },
  "type": "workflow",
  "debugSettings": {},
  "errorHandling": {
    "queue": {
      "config": {
        "emp": {
          "pos": 1,
          "text": "",
          "type": "que"
        }
      },
      "text": "",
      "type": "que",
      "uiMetaData": {
        "mode": 1
      },
      "metaData": {},
      "version": 2,
      "outOfService": true
    },
    "handlingType": "EndWorkflow"
  },
  "defaultSettings": {},
  "flowMetaData": {
    "flowDocumentVersion": "1.0",
    "minimumServerVersion": "1.0",
    "ttsDataVersion": "1.0"
  },
  "flowSequenceItemList": [
    {
      "startAction": "f1b3ffbb-cd54-4270-84e1-776bf7d4283a",
      "trackingId": 10,
      "id": "b03c94b2-daac-4fe6-947b-ca362125d1a6",
      "name": "Initial State",
      "uiMetaData": {
        "collapsed": false
      },
      "__type": "State",
      "actionList": [
        {
          "trackingId": 11,
          "id": "da2ed143-a8c0-4ff5-b296-cc073040ebf1",
          "name": "End Workflow",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "EndWorkflowAction",
          "exitReason": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "str"
              }
            },
            "text": "",
            "type": "str",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2
          }
        },
        {
          "nextAction": "1d911224-9616-4c01-874a-27f96b20245c",
          "trackingId": 19,
          "id": "f1b3ffbb-cd54-4270-84e1-776bf7d4283a",
          "name": "Ensures correct queue",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DecisionAction",
          "expression": {
            "config": {
              "==": {
                "pos": 14,
                "text": "Flow.queueId == \"963d7505-d432-4d8e-a795-7c8d32d71d32\"",
                "operands": [
                  {
                    "ref": {
                      "pos": 1,
                      "text": "Flow.queueId",
                      "type": "str",
                      "val": "3cd8297d-46ce-4ecf-9374-b69c9fc4e7ad"
                    }
                  },
                  {
                    "lit": {
                      "pos": 17,
                      "text": "963d7505-d432-4d8e-a795-7c8d32d71d32",
                      "type": "str"
                    }
                  }
                ],
                "type": "bln"
              }
            },
            "text": "Flow.queueId == \"963d7505-d432-4d8e-a795-7c8d32d71d32\"",
            "type": "bln",
            "uiMetaData": {
              "mode": 0
            },
            "metaData": {
              "references": [
                {
                  "id": "3cd8297d-46ce-4ecf-9374-b69c9fc4e7ad",
                  "type": "str",
                  "isSysRef": false,
                  "name": "Flow.queueId"
                }
              ]
            },
            "version": 2
          },
          "paths": [
            {
              "nextActionId": "abacbd09-244e-4476-a014-a5fdcb2e7f06",
              "label": "Yes",
              "outputId": "__YES__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "nextActionId": "cd43ac54-8ff4-4a27-8598-dce1c67f8b43",
              "label": "No",
              "outputId": "__NO__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "trackingId": 20,
          "id": "cd43ac54-8ff4-4a27-8598-dce1c67f8b43",
          "name": "End Workflow",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "EndWorkflowAction",
          "exitReason": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "str"
              }
            },
            "text": "",
            "type": "str",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2
          }
        },
        {
          "nextAction": "5b1211d0-b8d1-4414-b8c8-8b3ae08b129e",
          "trackingId": 31,
          "id": "4a06fce0-1f5c-4825-90b5-82e0eabc5a74",
          "name": "Update Data",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "UpdateVariableAction",
          "variables": [
            {
              "expression": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "",
                    "type": "jsn_coll",
                    "items": [
                      {
                        "config": {
                          "ToJson": {
                            "pos": 1,
                            "text": "ToJson(ToString(Flow.StatsCount))",
                            "operands": [
                              {
                                "ToString": {
                                  "pos": 1,
                                  "operands": [
                                    {
                                      "ref": {
                                        "pos": 10,
                                        "text": "Flow.StatsCount",
                                        "type": "int_coll",
                                        "val": "85cb0b02-211f-4498-a564-0a136b53d332"
                                      }
                                    }
                                  ],
                                  "type": "str"
                                }
                              }
                            ],
                            "type": "jsn"
                          }
                        },
                        "text": "ToString(Flow.StatsCount)",
                        "type": "jsn",
                        "uiMetaData": {
                          "mode": 0
                        },
                        "metaData": {
                          "references": [
                            {
                              "id": "85cb0b02-211f-4498-a564-0a136b53d332",
                              "type": "int_coll",
                              "isSysRef": false,
                              "name": "Flow.StatsCount"
                            }
                          ]
                        },
                        "version": 2
                      }
                    ]
                  }
                },
                "text": "",
                "type": "jsn_coll",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              },
              "variable": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.JSONDataCount",
                    "type": "jsn_coll",
                    "val": "195452a1-db58-454a-ba87-2d64390e1631"
                  }
                },
                "text": "Flow.JSONDataCount",
                "type": "jsn_coll",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "195452a1-db58-454a-ba87-2d64390e1631",
                      "type": "jsn_coll",
                      "isSysRef": false,
                      "name": "Flow.JSONDataCount"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "expression": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.qualifer)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 10,
                          "text": "Flow.qualifer",
                          "type": "str_coll",
                          "val": "0cddc3fe-31d8-4b0f-b9e2-9c319f58320c"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Flow.qualifer)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0cddc3fe-31d8-4b0f-b9e2-9c319f58320c",
                      "type": "str_coll",
                      "isSysRef": false,
                      "name": "Flow.qualifer"
                    }
                  ]
                },
                "version": 2
              },
              "variable": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.QualiftList",
                    "type": "str",
                    "val": "0c6af12f-e424-405a-bf2a-54270dcec394"
                  }
                },
                "text": "Flow.QualiftList",
                "type": "str",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0c6af12f-e424-405a-bf2a-54270dcec394",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.QualiftList"
                    }
                  ]
                },
                "version": 2
              }
            }
          ]
        },
        {
          "nextAction": "3bc38ebc-9c2a-4a33-a89d-82e64ebf17d8",
          "trackingId": 32,
          "id": "d6b85d6a-3def-4339-8407-29e966ad8028",
          "name": "Finds what position \"ON_QUEUE\" is from list",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "UpdateVariableAction",
          "variables": [
            {
              "expression": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(FindFirst(Flow.qualifer, \"ON_QUEUE\"))",
                    "operands": [
                      {
                        "FindFirst": {
                          "pos": 1,
                          "operands": [
                            {
                              "ref": {
                                "pos": 11,
                                "text": "Flow.qualifer",
                                "type": "str_coll",
                                "val": "0cddc3fe-31d8-4b0f-b9e2-9c319f58320c"
                              }
                            },
                            {
                              "lit": {
                                "pos": 26,
                                "text": "ON_QUEUE",
                                "type": "str"
                              }
                            }
                          ],
                          "type": "int"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "FindFirst(Flow.qualifer, \"ON_QUEUE\")",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0cddc3fe-31d8-4b0f-b9e2-9c319f58320c",
                      "type": "str_coll",
                      "isSysRef": false,
                      "name": "Flow.qualifer"
                    }
                  ]
                },
                "version": 2
              },
              "variable": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.CountTask",
                    "type": "str",
                    "val": "f59fc9d6-8acb-4210-a701-3130c94c4a84"
                  }
                },
                "text": "Flow.CountTask",
                "type": "str",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "f59fc9d6-8acb-4210-a701-3130c94c4a84",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.CountTask"
                    }
                  ]
                },
                "version": 2
              }
            }
          ]
        },
        {
          "nextAction": "d6b85d6a-3def-4339-8407-29e966ad8028",
          "trackingId": 33,
          "id": "5b1211d0-b8d1-4414-b8c8-8b3ae08b129e",
          "name": "Update Data",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "UpdateVariableAction",
          "variables": [
            {
              "expression": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(MakeList(Flow.QualiftList))",
                    "operands": [
                      {
                        "MakeList": {
                          "pos": 1,
                          "operands": [
                            {
                              "ref": {
                                "pos": 10,
                                "text": "Flow.QualiftList",
                                "type": "str",
                                "val": "0c6af12f-e424-405a-bf2a-54270dcec394"
                              }
                            }
                          ],
                          "type": "str_coll"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "MakeList(Flow.QualiftList)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0c6af12f-e424-405a-bf2a-54270dcec394",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.QualiftList"
                    }
                  ]
                },
                "version": 2
              },
              "variable": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.QList",
                    "type": "str",
                    "val": "9684b35f-d901-4bd8-a24a-0a42f1be159e"
                  }
                },
                "text": "Flow.QList",
                "type": "str",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "9684b35f-d901-4bd8-a24a-0a42f1be159e",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.QList"
                    }
                  ]
                },
                "version": 2
              }
            }
          ]
        },
        {
          "nextAction": "80b126a4-4bd8-467e-957a-831a3ba90acb",
          "trackingId": 34,
          "id": "3bc38ebc-9c2a-4a33-a89d-82e64ebf17d8",
          "name": "Gets the stats for \"ON_QUEUE\"",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "UpdateVariableAction",
          "variables": [
            {
              "expression": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(GetAt(ToJson(Flow.StatsCount), ToInt(Flow.CountTask)))",
                    "operands": [
                      {
                        "GetAt": {
                          "pos": 1,
                          "operands": [
                            {
                              "ToJson": {
                                "pos": 7,
                                "operands": [
                                  {
                                    "ref": {
                                      "pos": 14,
                                      "text": "Flow.StatsCount",
                                      "type": "int_coll",
                                      "val": "85cb0b02-211f-4498-a564-0a136b53d332"
                                    }
                                  }
                                ],
                                "type": "jsn"
                              }
                            },
                            {
                              "ToInt": {
                                "pos": 32,
                                "operands": [
                                  {
                                    "ref": {
                                      "pos": 38,
                                      "text": "Flow.CountTask",
                                      "type": "str",
                                      "val": "f59fc9d6-8acb-4210-a701-3130c94c4a84"
                                    }
                                  }
                                ],
                                "type": "int"
                              }
                            }
                          ],
                          "type": "jsn"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "GetAt(ToJson(Flow.StatsCount), ToInt(Flow.CountTask))",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "85cb0b02-211f-4498-a564-0a136b53d332",
                      "type": "int_coll",
                      "isSysRef": false,
                      "name": "Flow.StatsCount"
                    },
                    {
                      "id": "f59fc9d6-8acb-4210-a701-3130c94c4a84",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.CountTask"
                    }
                  ]
                },
                "version": 2
              },
              "variable": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.FinalCount",
                    "type": "str",
                    "val": "0798f8de-4790-479f-966f-de5781b657e4"
                  }
                },
                "text": "Flow.FinalCount",
                "type": "str",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0798f8de-4790-479f-966f-de5781b657e4",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.FinalCount"
                    }
                  ]
                },
                "version": 2
              }
            }
          ]
        },
        {
          "actionName": "Update objects - RD",
          "actionId": "custom_-_de14fa00-68b8-43d3-8fce-24f7bd186d1d",
          "category": {
            "id": "Salesforce - Richard-Sandbox Instance",
            "name": "Salesforce - Richard-Sandbox Instance"
          },
          "useSuggestedTimeout": true,
          "nextAction": "af76fb94-447c-4c6c-ba69-6476203934da",
          "trackingId": 35,
          "id": "80b126a4-4bd8-467e-957a-831a3ba90acb",
          "name": "Uploads data to SF",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "Object_SF_Type",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Employsure_Staff__c",
                    "type": "str"
                  }
                },
                "text": "Employsure_Staff__c",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_SF_ID",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.SFStaffID",
                    "type": "str",
                    "val": "b5537cc9-2182-449b-9914-ef516970ac0f"
                  }
                },
                "text": "Flow.SFStaffID",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "b5537cc9-2182-449b-9914-ef516970ac0f",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.SFStaffID"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "Object_Field_Name",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Advice_AHT_Daily__c",
                    "type": "str"
                  }
                },
                "text": "Advice_AHT_Daily__c",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_Field_Value",
              "value": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.FinalCount)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 10,
                          "text": "Flow.FinalCount",
                          "type": "str",
                          "val": "0798f8de-4790-479f-966f-de5781b657e4"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Flow.FinalCount)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0798f8de-4790-479f-966f-de5781b657e4",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.FinalCount"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "actionName": "Update objects - RD",
          "actionId": "custom_-_de14fa00-68b8-43d3-8fce-24f7bd186d1d",
          "category": {
            "id": "Salesforce - Richard-Sandbox Instance",
            "name": "Salesforce - Richard-Sandbox Instance"
          },
          "useSuggestedTimeout": true,
          "nextAction": "6d70e015-ed0b-4925-ae7e-242fb5ccf017",
          "trackingId": 36,
          "id": "6eaf2ac8-53f5-4d1c-b140-370cfc92c2e5",
          "name": "Uploads data to SF",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "Object_SF_Type",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Employsure_Staff__c",
                    "type": "str"
                  }
                },
                "text": "Employsure_Staff__c",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_SF_ID",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.SFStaffID",
                    "type": "str",
                    "val": "b5537cc9-2182-449b-9914-ef516970ac0f"
                  }
                },
                "text": "Flow.SFStaffID",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "b5537cc9-2182-449b-9914-ef516970ac0f",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.SFStaffID"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "Object_Field_Name",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Advice_Meaningful_Conversations__c",
                    "type": "str"
                  }
                },
                "text": "Advice_Meaningful_Conversations__c",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_Field_Value",
              "value": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.Count)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 10,
                          "text": "Flow.Count",
                          "type": "int",
                          "val": "9ff6a953-1c10-41c3-a3cf-2e5d25a569ed"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Flow.Count)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "9ff6a953-1c10-41c3-a3cf-2e5d25a569ed",
                      "type": "int",
                      "isSysRef": false,
                      "name": "Flow.Count"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "actionName": "Get Email from User",
          "actionId": "custom_-_dc0ff9ac-0869-42f3-9275-30b5b137488c",
          "category": {
            "id": "Genesys Cloud Data Actions",
            "name": "Genesys Cloud Data Actions"
          },
          "useSuggestedTimeout": true,
          "nextAction": "3ed56bfd-93f4-4e38-8907-28989f321f17",
          "trackingId": 15,
          "id": "4d80069f-d9f9-431b-a85f-ae69dbc00c83",
          "name": "Gets userID Var and converts to email",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "UserID",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.userid",
                    "type": "str",
                    "val": "cdb90b9a-52bd-4a4f-a952-98814de08a2e"
                  }
                },
                "text": "Flow.userid",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "cdb90b9a-52bd-4a4f-a952-98814de08a2e",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.userid"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [
            {
              "name": "address",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.useremail",
                    "type": "str",
                    "val": "3f25b99c-34db-41a7-b872-bacd573f3180"
                  }
                },
                "text": "Flow.useremail",
                "type": "str",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "3f25b99c-34db-41a7-b872-bacd573f3180",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.useremail"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "actionName": "Get ID From Employsure staff",
          "actionId": "custom_-_97b2b3e0-d81e-484d-9127-b778693b1f20",
          "category": {
            "id": "Salesforce - Richard-Sandbox Instance",
            "name": "Salesforce - Richard-Sandbox Instance"
          },
          "useSuggestedTimeout": true,
          "trackingId": 13,
          "id": "3ed56bfd-93f4-4e38-8907-28989f321f17",
          "name": "Converts Email to staffID",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "Email",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.useremail",
                    "type": "str",
                    "val": "3f25b99c-34db-41a7-b872-bacd573f3180"
                  }
                },
                "text": "Flow.useremail",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "3f25b99c-34db-41a7-b872-bacd573f3180",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.useremail"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [
            {
              "name": "Id",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.SFStaffID",
                    "type": "str",
                    "val": "b5537cc9-2182-449b-9914-ef516970ac0f"
                  }
                },
                "text": "Flow.SFStaffID",
                "type": "str",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "b5537cc9-2182-449b-9914-ef516970ac0f",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.SFStaffID"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "nextActionId": "734fa752-e11c-40d7-b75f-2bd34823d3aa",
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "actionName": "User Analytics Status (v5)",
          "actionId": "custom_-_db4c70dc-785b-4f71-b407-1e3e28432520",
          "category": {
            "id": "Chatbot Transcript",
            "name": "Chatbot Transcript"
          },
          "useSuggestedTimeout": true,
          "nextAction": "d985c546-4a56-46f0-a910-42babb52e27e",
          "trackingId": 37,
          "id": "1d911224-9616-4c01-874a-27f96b20245c",
          "name": "Gets Status data such as ON_Queue",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "interval",
              "value": {
                "config": {
                  "+": {
                    "pos": 54,
                    "text": "(ToString(AddDays(GetCurrentDateTimeUtc(), -1)) + \"/\") + ToString(GetCurrentDateTimeUtc())",
                    "operands": [
                      {
                        "+": {
                          "pos": 48,
                          "operands": [
                            {
                              "ToString": {
                                "pos": 1,
                                "operands": [
                                  {
                                    "AddDays": {
                                      "pos": 10,
                                      "operands": [
                                        {
                                          "GetCurrentDateTimeUtc": {
                                            "pos": 18,
                                            "operands": [],
                                            "type": "dtm"
                                          }
                                        },
                                        {
                                          "lit": {
                                            "pos": 43,
                                            "text": "-1",
                                            "type": "int"
                                          }
                                        }
                                      ],
                                      "type": "dtm"
                                    }
                                  }
                                ],
                                "type": "str"
                              }
                            },
                            {
                              "lit": {
                                "pos": 50,
                                "text": "/",
                                "type": "str"
                              }
                            }
                          ],
                          "type": "str"
                        }
                      },
                      {
                        "ToString": {
                          "pos": 56,
                          "operands": [
                            {
                              "GetCurrentDateTimeUtc": {
                                "pos": 65,
                                "operands": [],
                                "type": "dtm"
                              }
                            }
                          ],
                          "type": "str"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(AddDays(GetCurrentDateTimeUtc(), -1)) + \"/\" + ToString(GetCurrentDateTimeUtc())",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userid",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.userid",
                    "type": "str",
                    "val": "cdb90b9a-52bd-4a4f-a952-98814de08a2e"
                  }
                },
                "text": "Flow.userid",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "cdb90b9a-52bd-4a4f-a952-98814de08a2e",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.userid"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [
            {
              "name": "qualifier",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.qualifer",
                    "type": "str_coll",
                    "val": "0cddc3fe-31d8-4b0f-b9e2-9c319f58320c"
                  }
                },
                "text": "Flow.qualifer",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0cddc3fe-31d8-4b0f-b9e2-9c319f58320c",
                      "type": "str_coll",
                      "isSysRef": false,
                      "name": "Flow.qualifer"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "count",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.StatsCount",
                    "type": "int_coll",
                    "val": "85cb0b02-211f-4498-a564-0a136b53d332"
                  }
                },
                "text": "Flow.StatsCount",
                "type": "int_coll",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "85cb0b02-211f-4498-a564-0a136b53d332",
                      "type": "int_coll",
                      "isSysRef": false,
                      "name": "Flow.StatsCount"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "actionName": "User Analytics (v3)",
          "actionId": "custom_-_5f39c7f2-90b8-4125-8428-58408d026cb5",
          "category": {
            "id": "Chatbot Transcript",
            "name": "Chatbot Transcript"
          },
          "useSuggestedTimeout": true,
          "nextAction": "4a06fce0-1f5c-4825-90b5-82e0eabc5a74",
          "trackingId": 38,
          "id": "d985c546-4a56-46f0-a910-42babb52e27e",
          "name": "Call Data Action",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "interval",
              "value": {
                "config": {
                  "+": {
                    "pos": 54,
                    "text": "(ToString(AddDays(GetCurrentDateTimeUtc(), -1)) + \"/\") + ToString(GetCurrentDateTimeUtc())",
                    "operands": [
                      {
                        "+": {
                          "pos": 48,
                          "operands": [
                            {
                              "ToString": {
                                "pos": 1,
                                "operands": [
                                  {
                                    "AddDays": {
                                      "pos": 10,
                                      "operands": [
                                        {
                                          "GetCurrentDateTimeUtc": {
                                            "pos": 18,
                                            "operands": [],
                                            "type": "dtm"
                                          }
                                        },
                                        {
                                          "lit": {
                                            "pos": 43,
                                            "text": "-1",
                                            "type": "int"
                                          }
                                        }
                                      ],
                                      "type": "dtm"
                                    }
                                  }
                                ],
                                "type": "str"
                              }
                            },
                            {
                              "lit": {
                                "pos": 50,
                                "text": "/",
                                "type": "str"
                              }
                            }
                          ],
                          "type": "str"
                        }
                      },
                      {
                        "ToString": {
                          "pos": 56,
                          "operands": [
                            {
                              "GetCurrentDateTimeUtc": {
                                "pos": 65,
                                "operands": [],
                                "type": "dtm"
                              }
                            }
                          ],
                          "type": "str"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(AddDays(GetCurrentDateTimeUtc(), -1)) + \"/\" + ToString(GetCurrentDateTimeUtc())",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userid",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.userid",
                    "type": "str",
                    "val": "cdb90b9a-52bd-4a4f-a952-98814de08a2e"
                  }
                },
                "text": "Flow.userid",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "cdb90b9a-52bd-4a4f-a952-98814de08a2e",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.userid"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [
            {
              "name": "count",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.Count",
                    "type": "int",
                    "val": "9ff6a953-1c10-41c3-a3cf-2e5d25a569ed"
                  }
                },
                "text": "Flow.Count",
                "type": "int",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "9ff6a953-1c10-41c3-a3cf-2e5d25a569ed",
                      "type": "int",
                      "isSysRef": false,
                      "name": "Flow.Count"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "sum",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.sum",
                    "type": "int",
                    "val": "948a337a-e4b5-493e-b5b4-45f7ec88c27a"
                  }
                },
                "text": "Flow.sum",
                "type": "int",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "948a337a-e4b5-493e-b5b4-45f7ec88c27a",
                      "type": "int",
                      "isSysRef": false,
                      "name": "Flow.sum"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "switchStyle": 1,
          "version": "1.0",
          "nextAction": "86f03e5a-a3e9-4e3e-a39a-c10df541d1ea",
          "trackingId": 42,
          "id": "abacbd09-244e-4476-a014-a5fdcb2e7f06",
          "name": "Checks Helen UserID",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "SwitchAction",
          "expression": {
            "config": {
              "ref": {
                "pos": 1,
                "text": "Flow.userid",
                "type": "str",
                "val": "cdb90b9a-52bd-4a4f-a952-98814de08a2e"
              }
            },
            "text": "Flow.userid",
            "type": "str",
            "uiMetaData": {
              "mode": 0
            },
            "metaData": {
              "references": [
                {
                  "id": "cdb90b9a-52bd-4a4f-a952-98814de08a2e",
                  "type": "str",
                  "isSysRef": false,
                  "name": "Flow.userid"
                }
              ]
            },
            "version": 2
          },
          "cases": [
            {
              "name": "Case 1",
              "referenceId": "54dfdc1a-740c-451d-a72e-530336350a16",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "02a448df-9139-4cf8-8cc1-aea8ccccf2b4",
                    "type": "str"
                  }
                },
                "text": "02a448df-9139-4cf8-8cc1-aea8ccccf2b4",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "paths": [
            {
              "label": "Case 1",
              "localizedLabel": "Case 1",
              "outputId": "54dfdc1a-740c-451d-a72e-530336350a16",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Default",
              "localizedLabel": "Default",
              "outputId": "__DEFAULT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "evaluateEmergencyGroup": false,
          "evaluateNow": true,
          "trackingId": 44,
          "id": "6b80e2a3-d915-4489-b369-19c6e0e41409",
          "name": "Evaluate Schedule",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "EvaluateScheduleAction",
          "timeZone": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "Australia/Sydney",
                "type": "str"
              }
            },
            "text": "Australia/Sydney",
            "type": "str",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "schedule": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "Run SF Data Push",
                "type": "sch",
                "val": "1ad9ba85-030c-45c3-b3ad-9bd06a0a768d"
              }
            },
            "text": "Run SF Data Push",
            "type": "sch",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "evaluationDateTime": {
            "text": "",
            "type": "dtm",
            "uiMetaData": {
              "mode": 0
            },
            "version": 2,
            "outOfService": true
          },
          "emergencyGroup": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "",
                "type": "emg"
              }
            },
            "text": "",
            "type": "emg",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "paths": [
            {
              "nextActionId": "d4319aa8-fd0e-4c9c-9597-d35d3846d5d1",
              "label": "Active",
              "outputId": "__ACTIVE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "nextActionId": "118b4465-b967-4b66-aa94-6fe6b45d4196",
              "label": "Inactive",
              "outputId": "__INACTIVE__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "nextAction": "4f8b01fc-7314-4696-8e24-750c6163e224",
          "trackingId": 46,
          "id": "118b4465-b967-4b66-aa94-6fe6b45d4196",
          "name": "Wait",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "WaitAction",
          "trimDurationNearMaxRunningTime": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "false",
                "type": "bln"
              }
            },
            "text": "false",
            "type": "bln",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "duration": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D1H0M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D1H0M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          }
        },
        {
          "trackingId": 47,
          "id": "4f8b01fc-7314-4696-8e24-750c6163e224",
          "name": "Next Loop",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "NextLoopAction"
        },
        {
          "trackingId": 48,
          "id": "d4319aa8-fd0e-4c9c-9597-d35d3846d5d1",
          "name": "Exit Loop",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "ExitLoopAction"
        },
        {
          "actionName": "Insert Data Table Row - Agent Reporting",
          "actionId": "custom_-_6e299969-3371-432b-a5af-47f610e24957",
          "category": {
            "id": "Chatbot Transcript",
            "name": "Chatbot Transcript"
          },
          "useSuggestedTimeout": true,
          "nextAction": "95c2b58e-d085-4f29-b709-fe7464953834",
          "trackingId": 49,
          "id": "05fe7b15-bfe5-4706-b9fe-aeb52722d5e1",
          "name": "Call Data Action",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "Key",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.conversationId",
                    "type": "str",
                    "val": "aa0f6d2f-f51f-4984-8e53-6a4bbe6cf414"
                  }
                },
                "text": "Flow.conversationId",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "aa0f6d2f-f51f-4984-8e53-6a4bbe6cf414",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.conversationId"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "StartTime",
              "value": {
                "config": {
                  "+": {
                    "pos": 171,
                    "text": "(((((((ToString(Day(Flow.startDateTime)) + \"/\") + ToString(Month(Flow.startDateTime))) + \"/\") + ToString(Year(Flow.startDateTime))) + \" \") + ToString(Hour(Flow.startDateTime))) + \":\") + ToString(Minute(Flow.startDateTime))",
                    "operands": [
                      {
                        "+": {
                          "pos": 165,
                          "operands": [
                            {
                              "+": {
                                "pos": 128,
                                "operands": [
                                  {
                                    "+": {
                                      "pos": 122,
                                      "operands": [
                                        {
                                          "+": {
                                            "pos": 85,
                                            "operands": [
                                              {
                                                "+": {
                                                  "pos": 79,
                                                  "operands": [
                                                    {
                                                      "+": {
                                                        "pos": 41,
                                                        "operands": [
                                                          {
                                                            "+": {
                                                              "pos": 35,
                                                              "operands": [
                                                                {
                                                                  "ToString": {
                                                                    "pos": 1,
                                                                    "operands": [
                                                                      {
                                                                        "Day": {
                                                                          "pos": 10,
                                                                          "operands": [
                                                                            {
                                                                              "ref": {
                                                                                "pos": 14,
                                                                                "text": "Flow.startDateTime",
                                                                                "type": "dtm",
                                                                                "val": "f1468025-0896-469e-84e9-636eaf15021b"
                                                                              }
                                                                            }
                                                                          ],
                                                                          "type": "int"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "type": "str"
                                                                  }
                                                                },
                                                                {
                                                                  "lit": {
                                                                    "pos": 37,
                                                                    "text": "/",
                                                                    "type": "str"
                                                                  }
                                                                }
                                                              ],
                                                              "type": "str"
                                                            }
                                                          },
                                                          {
                                                            "ToString": {
                                                              "pos": 43,
                                                              "operands": [
                                                                {
                                                                  "Month": {
                                                                    "pos": 52,
                                                                    "operands": [
                                                                      {
                                                                        "ref": {
                                                                          "pos": 58,
                                                                          "text": "Flow.startDateTime",
                                                                          "type": "dtm",
                                                                          "val": "f1468025-0896-469e-84e9-636eaf15021b"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "type": "int"
                                                                  }
                                                                }
                                                              ],
                                                              "type": "str"
                                                            }
                                                          }
                                                        ],
                                                        "type": "str"
                                                      }
                                                    },
                                                    {
                                                      "lit": {
                                                        "pos": 81,
                                                        "text": "/",
                                                        "type": "str"
                                                      }
                                                    }
                                                  ],
                                                  "type": "str"
                                                }
                                              },
                                              {
                                                "ToString": {
                                                  "pos": 87,
                                                  "operands": [
                                                    {
                                                      "Year": {
                                                        "pos": 96,
                                                        "operands": [
                                                          {
                                                            "ref": {
                                                              "pos": 101,
                                                              "text": "Flow.startDateTime",
                                                              "type": "dtm",
                                                              "val": "f1468025-0896-469e-84e9-636eaf15021b"
                                                            }
                                                          }
                                                        ],
                                                        "type": "int"
                                                      }
                                                    }
                                                  ],
                                                  "type": "str"
                                                }
                                              }
                                            ],
                                            "type": "str"
                                          }
                                        },
                                        {
                                          "lit": {
                                            "pos": 124,
                                            "text": " ",
                                            "type": "str"
                                          }
                                        }
                                      ],
                                      "type": "str"
                                    }
                                  },
                                  {
                                    "ToString": {
                                      "pos": 130,
                                      "operands": [
                                        {
                                          "Hour": {
                                            "pos": 139,
                                            "operands": [
                                              {
                                                "ref": {
                                                  "pos": 144,
                                                  "text": "Flow.startDateTime",
                                                  "type": "dtm",
                                                  "val": "f1468025-0896-469e-84e9-636eaf15021b"
                                                }
                                              }
                                            ],
                                            "type": "int"
                                          }
                                        }
                                      ],
                                      "type": "str"
                                    }
                                  }
                                ],
                                "type": "str"
                              }
                            },
                            {
                              "lit": {
                                "pos": 167,
                                "text": ":",
                                "type": "str"
                              }
                            }
                          ],
                          "type": "str"
                        }
                      },
                      {
                        "ToString": {
                          "pos": 173,
                          "operands": [
                            {
                              "Minute": {
                                "pos": 182,
                                "operands": [
                                  {
                                    "ref": {
                                      "pos": 189,
                                      "text": "Flow.startDateTime",
                                      "type": "dtm",
                                      "val": "f1468025-0896-469e-84e9-636eaf15021b"
                                    }
                                  }
                                ],
                                "type": "int"
                              }
                            }
                          ],
                          "type": "str"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Day(Flow.startDateTime)) + \"/\" + ToString(Month(Flow.startDateTime)) + \"/\" + ToString(Year(Flow.startDateTime)) + \" \" + ToString(Hour(Flow.startDateTime)) + \":\" + ToString(Minute(Flow.startDateTime))",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "f1468025-0896-469e-84e9-636eaf15021b",
                      "type": "dtm",
                      "isSysRef": false,
                      "name": "Flow.startDateTime"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "RunTime",
              "value": {
                "config": {
                  "+": {
                    "pos": 191,
                    "text": "(((((((ToString(Day(Flow.StartDateTimeLocal)) + \"/\") + ToString(Month(Flow.StartDateTimeLocal))) + \"/\") + ToString(Year(Flow.StartDateTimeLocal))) + \" \") + ToString(Hour(Flow.StartDateTimeLocal))) + \":\") + ToString(Minute(Flow.StartDateTimeLocal))",
                    "operands": [
                      {
                        "+": {
                          "pos": 185,
                          "operands": [
                            {
                              "+": {
                                "pos": 143,
                                "operands": [
                                  {
                                    "+": {
                                      "pos": 137,
                                      "operands": [
                                        {
                                          "+": {
                                            "pos": 95,
                                            "operands": [
                                              {
                                                "+": {
                                                  "pos": 89,
                                                  "operands": [
                                                    {
                                                      "+": {
                                                        "pos": 46,
                                                        "operands": [
                                                          {
                                                            "+": {
                                                              "pos": 40,
                                                              "operands": [
                                                                {
                                                                  "ToString": {
                                                                    "pos": 1,
                                                                    "operands": [
                                                                      {
                                                                        "Day": {
                                                                          "pos": 10,
                                                                          "operands": [
                                                                            {
                                                                              "ref": {
                                                                                "pos": 14,
                                                                                "text": "Flow.StartDateTimeLocal",
                                                                                "type": "dtm",
                                                                                "val": "0f53a585-e9ef-44c7-821b-d64f2aeebb79"
                                                                              }
                                                                            }
                                                                          ],
                                                                          "type": "int"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "type": "str"
                                                                  }
                                                                },
                                                                {
                                                                  "lit": {
                                                                    "pos": 42,
                                                                    "text": "/",
                                                                    "type": "str"
                                                                  }
                                                                }
                                                              ],
                                                              "type": "str"
                                                            }
                                                          },
                                                          {
                                                            "ToString": {
                                                              "pos": 48,
                                                              "operands": [
                                                                {
                                                                  "Month": {
                                                                    "pos": 57,
                                                                    "operands": [
                                                                      {
                                                                        "ref": {
                                                                          "pos": 63,
                                                                          "text": "Flow.StartDateTimeLocal",
                                                                          "type": "dtm",
                                                                          "val": "0f53a585-e9ef-44c7-821b-d64f2aeebb79"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "type": "int"
                                                                  }
                                                                }
                                                              ],
                                                              "type": "str"
                                                            }
                                                          }
                                                        ],
                                                        "type": "str"
                                                      }
                                                    },
                                                    {
                                                      "lit": {
                                                        "pos": 91,
                                                        "text": "/",
                                                        "type": "str"
                                                      }
                                                    }
                                                  ],
                                                  "type": "str"
                                                }
                                              },
                                              {
                                                "ToString": {
                                                  "pos": 97,
                                                  "operands": [
                                                    {
                                                      "Year": {
                                                        "pos": 106,
                                                        "operands": [
                                                          {
                                                            "ref": {
                                                              "pos": 111,
                                                              "text": "Flow.StartDateTimeLocal",
                                                              "type": "dtm",
                                                              "val": "0f53a585-e9ef-44c7-821b-d64f2aeebb79"
                                                            }
                                                          }
                                                        ],
                                                        "type": "int"
                                                      }
                                                    }
                                                  ],
                                                  "type": "str"
                                                }
                                              }
                                            ],
                                            "type": "str"
                                          }
                                        },
                                        {
                                          "lit": {
                                            "pos": 139,
                                            "text": " ",
                                            "type": "str"
                                          }
                                        }
                                      ],
                                      "type": "str"
                                    }
                                  },
                                  {
                                    "ToString": {
                                      "pos": 145,
                                      "operands": [
                                        {
                                          "Hour": {
                                            "pos": 154,
                                            "operands": [
                                              {
                                                "ref": {
                                                  "pos": 159,
                                                  "text": "Flow.StartDateTimeLocal",
                                                  "type": "dtm",
                                                  "val": "0f53a585-e9ef-44c7-821b-d64f2aeebb79"
                                                }
                                              }
                                            ],
                                            "type": "int"
                                          }
                                        }
                                      ],
                                      "type": "str"
                                    }
                                  }
                                ],
                                "type": "str"
                              }
                            },
                            {
                              "lit": {
                                "pos": 187,
                                "text": ":",
                                "type": "str"
                              }
                            }
                          ],
                          "type": "str"
                        }
                      },
                      {
                        "ToString": {
                          "pos": 193,
                          "operands": [
                            {
                              "Minute": {
                                "pos": 202,
                                "operands": [
                                  {
                                    "ref": {
                                      "pos": 209,
                                      "text": "Flow.StartDateTimeLocal",
                                      "type": "dtm",
                                      "val": "0f53a585-e9ef-44c7-821b-d64f2aeebb79"
                                    }
                                  }
                                ],
                                "type": "int"
                              }
                            }
                          ],
                          "type": "str"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Day(Flow.StartDateTimeLocal)) + \"/\" + ToString(Month(Flow.StartDateTimeLocal)) + \"/\" + ToString(Year(Flow.StartDateTimeLocal)) + \" \" + ToString(Hour(Flow.StartDateTimeLocal)) + \":\" + ToString(Minute(Flow.StartDateTimeLocal))",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0f53a585-e9ef-44c7-821b-d64f2aeebb79",
                      "type": "dtm",
                      "isSysRef": false,
                      "name": "Flow.StartDateTimeLocal"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "UserID",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.useremail",
                    "type": "str",
                    "val": "3f25b99c-34db-41a7-b872-bacd573f3180"
                  }
                },
                "text": "Flow.useremail",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "3f25b99c-34db-41a7-b872-bacd573f3180",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.useremail"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "ON_Queue",
              "value": {
                "config": {
                  "ToString": {
                    "pos": 24,
                    "text": "ToString(ToInt(Flow.FinalCount) / 1000)",
                    "operands": [
                      {
                        "/": {
                          "pos": 24,
                          "operands": [
                            {
                              "ToInt": {
                                "pos": 2,
                                "operands": [
                                  {
                                    "ref": {
                                      "pos": 8,
                                      "text": "Flow.FinalCount",
                                      "type": "str",
                                      "val": "0798f8de-4790-479f-966f-de5781b657e4"
                                    }
                                  }
                                ],
                                "type": "int"
                              }
                            },
                            {
                              "lit": {
                                "pos": 25,
                                "text": "1000",
                                "type": "int"
                              }
                            }
                          ],
                          "type": "dec"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "(ToInt(Flow.FinalCount)/1000)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0798f8de-4790-479f-966f-de5781b657e4",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.FinalCount"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "InteractionCount",
              "value": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.Count)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 10,
                          "text": "Flow.Count",
                          "type": "int",
                          "val": "9ff6a953-1c10-41c3-a3cf-2e5d25a569ed"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Flow.Count)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "9ff6a953-1c10-41c3-a3cf-2e5d25a569ed",
                      "type": "int",
                      "isSysRef": false,
                      "name": "Flow.Count"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "TalkTime",
              "value": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.sum)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 10,
                          "text": "Flow.sum",
                          "type": "int",
                          "val": "948a337a-e4b5-493e-b5b4-45f7ec88c27a"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Flow.sum)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "948a337a-e4b5-493e-b5b4-45f7ec88c27a",
                      "type": "int",
                      "isSysRef": false,
                      "name": "Flow.sum"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [
            {
              "name": "Key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "StartTime",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "RunTime",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "UserID",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "ON_Queue",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "InteractionCount",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "TalkTime",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "nextAction": "4d80069f-d9f9-431b-a85f-ae69dbc00c83",
          "trackingId": 45,
          "id": "86f03e5a-a3e9-4e3e-a39a-c10df541d1ea",
          "name": "Loop",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "LoopAction",
          "currentIndex": {
            "config": {
              "ref": {
                "pos": 1,
                "text": "State.TimeLoop",
                "type": "int",
                "val": "92aa048a-13d4-4957-b831-d95a55e24de4"
              }
            },
            "text": "State.TimeLoop",
            "type": "int",
            "uiMetaData": {
              "mode": 2
            },
            "metaData": {
              "references": [
                {
                  "id": "92aa048a-13d4-4957-b831-d95a55e24de4",
                  "type": "int",
                  "isSysRef": false,
                  "name": "State.TimeLoop"
                }
              ]
            },
            "version": 2
          },
          "loopCount": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "23",
                "type": "int"
              }
            },
            "text": "23",
            "type": "int",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "path": {
            "nextActionId": "6b80e2a3-d915-4489-b369-19c6e0e41409",
            "label": "Loop",
            "outputId": "__LOOP__",
            "uiMetaData": {
              "collapsed": false
            }
          }
        },
        {
          "actionName": "Update objects - RD",
          "actionId": "custom_-_de14fa00-68b8-43d3-8fce-24f7bd186d1d",
          "category": {
            "id": "Salesforce - Richard-Sandbox Instance",
            "name": "Salesforce - Richard-Sandbox Instance"
          },
          "useSuggestedTimeout": true,
          "nextAction": "48f2132d-40a3-48bd-acf7-52a487c993a6",
          "trackingId": 50,
          "id": "af76fb94-447c-4c6c-ba69-6476203934da",
          "name": "Uploads data to SF - ON_Queue",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "Object_SF_Type",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Employsure_Staff__c",
                    "type": "str"
                  }
                },
                "text": "Employsure_Staff__c",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_SF_ID",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.SFStaffID",
                    "type": "str",
                    "val": "b5537cc9-2182-449b-9914-ef516970ac0f"
                  }
                },
                "text": "Flow.SFStaffID",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "b5537cc9-2182-449b-9914-ef516970ac0f",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.SFStaffID"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "Object_Field_Name",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Advice_Available_Daily__c",
                    "type": "str"
                  }
                },
                "text": "Advice_Available_Daily__c",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_Field_Value",
              "value": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.FinalCount)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 10,
                          "text": "Flow.FinalCount",
                          "type": "str",
                          "val": "0798f8de-4790-479f-966f-de5781b657e4"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Flow.FinalCount)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0798f8de-4790-479f-966f-de5781b657e4",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.FinalCount"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "actionName": "Update objects - RD",
          "actionId": "custom_-_de14fa00-68b8-43d3-8fce-24f7bd186d1d",
          "category": {
            "id": "Salesforce - Richard-Sandbox Instance",
            "name": "Salesforce - Richard-Sandbox Instance"
          },
          "useSuggestedTimeout": true,
          "nextAction": "6eaf2ac8-53f5-4d1c-b140-370cfc92c2e5",
          "trackingId": 51,
          "id": "48f2132d-40a3-48bd-acf7-52a487c993a6",
          "name": "Uploads data to SF -Total Handled Sum",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "Object_SF_Type",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Employsure_Staff__c",
                    "type": "str"
                  }
                },
                "text": "Employsure_Staff__c",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_SF_ID",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.SFStaffID",
                    "type": "str",
                    "val": "b5537cc9-2182-449b-9914-ef516970ac0f"
                  }
                },
                "text": "Flow.SFStaffID",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "b5537cc9-2182-449b-9914-ef516970ac0f",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.SFStaffID"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "Object_Field_Name",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Advice_Handled__c",
                    "type": "str"
                  }
                },
                "text": "Advice_Handled__c",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_Field_Value",
              "value": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.sum)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 10,
                          "text": "Flow.sum",
                          "type": "int",
                          "val": "948a337a-e4b5-493e-b5b4-45f7ec88c27a"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Flow.sum)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "948a337a-e4b5-493e-b5b4-45f7ec88c27a",
                      "type": "int",
                      "isSysRef": false,
                      "name": "Flow.sum"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "nextAction": "05fe7b15-bfe5-4706-b9fe-aeb52722d5e1",
          "trackingId": 55,
          "id": "6d70e015-ed0b-4925-ae7e-242fb5ccf017",
          "name": "Update Data",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "UpdateVariableAction",
          "variables": [
            {
              "expression": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.FinalCount)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 10,
                          "text": "Flow.FinalCount",
                          "type": "str",
                          "val": "0798f8de-4790-479f-966f-de5781b657e4"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Flow.FinalCount)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0798f8de-4790-479f-966f-de5781b657e4",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.FinalCount"
                    }
                  ]
                },
                "version": 2
              },
              "variable": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.ONQ",
                    "type": "str",
                    "val": "daf89b6b-d6e5-43c8-86a0-a8b7d546163d"
                  }
                },
                "text": "Flow.ONQ",
                "type": "str",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "daf89b6b-d6e5-43c8-86a0-a8b7d546163d",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.ONQ"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "expression": {
                "config": {
                  "AddHours": {
                    "pos": 1,
                    "text": "AddHours(GetCurrentDateTimeUtc(), 11)",
                    "operands": [
                      {
                        "GetCurrentDateTimeUtc": {
                          "pos": 10,
                          "operands": [],
                          "type": "dtm"
                        }
                      },
                      {
                        "lit": {
                          "pos": 34,
                          "text": "11",
                          "type": "int"
                        }
                      }
                    ],
                    "type": "dtm"
                  }
                },
                "text": "AddHours(GetCurrentDateTimeUtc(),11)",
                "type": "dtm",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {},
                "version": 2
              },
              "variable": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.StartDateTimeLocal",
                    "type": "dtm",
                    "val": "0f53a585-e9ef-44c7-821b-d64f2aeebb79"
                  }
                },
                "text": "Flow.StartDateTimeLocal",
                "type": "dtm",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "0f53a585-e9ef-44c7-821b-d64f2aeebb79",
                      "type": "dtm",
                      "isSysRef": false,
                      "name": "Flow.StartDateTimeLocal"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "expression": {
                "config": {
                  "AddHours": {
                    "pos": 1,
                    "text": "AddHours(Flow.StartDateTimeUtc, 11)",
                    "operands": [
                      {
                        "sysref": {
                          "pos": 10,
                          "text": "Flow.StartDateTimeUtc",
                          "type": "dtm",
                          "val": "__FLOW_START_TIME__"
                        }
                      },
                      {
                        "lit": {
                          "pos": 32,
                          "text": "11",
                          "type": "int"
                        }
                      }
                    ],
                    "type": "dtm"
                  }
                },
                "text": "AddHours(Flow.StartDateTimeUtc,11)",
                "type": "dtm",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "__FLOW_START_TIME__",
                      "type": "dtm",
                      "isSysRef": true,
                      "name": "Flow.StartDateTimeUtc"
                    }
                  ]
                },
                "version": 2
              },
              "variable": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.startDateTime",
                    "type": "dtm",
                    "val": "f1468025-0896-469e-84e9-636eaf15021b"
                  }
                },
                "text": "Flow.startDateTime",
                "type": "dtm",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "f1468025-0896-469e-84e9-636eaf15021b",
                      "type": "dtm",
                      "isSysRef": false,
                      "name": "Flow.startDateTime"
                    }
                  ]
                },
                "version": 2
              }
            }
          ]
        },
        {
          "trackingId": 56,
          "id": "734fa752-e11c-40d7-b75f-2bd34823d3aa",
          "name": "End Workflow",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "EndWorkflowAction",
          "exitReason": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "str"
              }
            },
            "text": "",
            "type": "str",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2
          }
        },
        {
          "actionName": "AgentLess Email (Prod) (v4)",
          "actionId": "custom_-_94ea84f6-16d0-4f6f-9339-f6df83567b8a",
          "category": {
            "id": "Chatbot Transcript",
            "name": "Chatbot Transcript"
          },
          "useSuggestedTimeout": true,
          "nextAction": "da2ed143-a8c0-4ff5-b296-cc073040ebf1",
          "trackingId": 57,
          "id": "c61ab638-0cfe-490a-9e9c-6f86db921f3d",
          "name": "Call Data Action",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "subject",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Employsure Staff - Updated",
                    "type": "str"
                  }
                },
                "text": "Employsure Staff - Updated",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "textbody",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Updated Employsure staff ",
                    "type": "str"
                  }
                },
                "text": "Updated Employsure staff ",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "htmlbody",
              "value": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.useremail)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 10,
                          "text": "Flow.useremail",
                          "type": "str",
                          "val": "3f25b99c-34db-41a7-b872-bacd573f3180"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "ToString(Flow.useremail)",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "3f25b99c-34db-41a7-b872-bacd573f3180",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.useremail"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "toemail",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "2546f7c6.employsure.onmicrosoft.com@apac.teams.ms",
                    "type": "str"
                  }
                },
                "text": "2546f7c6.employsure.onmicrosoft.com@apac.teams.ms",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "outputs": [],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "disabled": true,
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "disabled": true,
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "disabled": true,
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "nextAction": "c61ab638-0cfe-490a-9e9c-6f86db921f3d",
          "trackingId": 28,
          "id": "95c2b58e-d085-4f29-b709-fe7464953834",
          "name": "End Workflow",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "EndWorkflowAction",
          "exitReason": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "str"
              }
            },
            "text": "",
            "type": "str",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2
          }
        }
      ],
      "variables": [
        {
          "id": "92aa048a-13d4-4957-b831-d95a55e24de4",
          "isCollection": false,
          "isInternal": false,
          "isOutput": false,
          "isInput": false,
          "isSecure": false,
          "version": "1.0",
          "__type": "IntegerVariable",
          "name": "State.TimeLoop",
          "initialValue": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "int"
              }
            },
            "text": "",
            "type": "int",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2
          }
        }
      ]
    }
  ],
  "supportedLanguageOptions": [
    {
      "language": "en-AU"
    }
  ],
  "variables": [
    {
      "id": "aa0f6d2f-f51f-4984-8e53-6a4bbe6cf414",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.conversationId",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "3cd8297d-46ce-4ecf-9374-b69c9fc4e7ad",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.queueId",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "1ad200f8-046f-4f56-92f7-6c5dec339dee",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.answeredUserId",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "cdb90b9a-52bd-4a4f-a952-98814de08a2e",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.userid",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "3f25b99c-34db-41a7-b872-bacd573f3180",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.useremail",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "b5537cc9-2182-449b-9914-ef516970ac0f",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.SFStaffID",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "95efc208-a71b-4b5e-8144-5c50311495ab",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.direction",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "9ff6a953-1c10-41c3-a3cf-2e5d25a569ed",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "IntegerVariable",
      "name": "Flow.Count",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "int"
          }
        },
        "text": "",
        "type": "int",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "948a337a-e4b5-493e-b5b4-45f7ec88c27a",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "IntegerVariable",
      "name": "Flow.sum",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "int"
          }
        },
        "text": "",
        "type": "int",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "20c852f1-72c1-4231-8416-a49eef0c3570",
      "isCollection": true,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "IntegerVariable",
      "name": "Flow.StatusSim",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "int_coll"
          }
        },
        "text": "",
        "type": "int_coll",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "b7e205a6-bf39-4037-a5a2-a5df2176c59b",
      "isCollection": true,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.StatusQualifer",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str_coll"
          }
        },
        "text": "",
        "type": "str_coll",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "0cddc3fe-31d8-4b0f-b9e2-9c319f58320c",
      "isCollection": true,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.qualifer",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str_coll"
          }
        },
        "text": "",
        "type": "str_coll",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "85cb0b02-211f-4498-a564-0a136b53d332",
      "isCollection": true,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "IntegerVariable",
      "name": "Flow.StatsCount",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "int_coll"
          }
        },
        "text": "",
        "type": "int_coll",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "2ebd6769-5bb8-4d4e-94f3-512be682c129",
      "isCollection": true,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "typeIdentifier": "jsn_coll",
      "__type": "JsonVariable",
      "name": "Flow.JSONData",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "jsn_coll"
          }
        },
        "text": "",
        "type": "jsn_coll",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "195452a1-db58-454a-ba87-2d64390e1631",
      "isCollection": true,
      "isInternal": false,
      "isOutput": false,
      "isInput": false,
      "isSecure": false,
      "version": "1.0",
      "typeIdentifier": "jsn_coll",
      "__type": "JsonVariable",
      "name": "Flow.JSONDataCount",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "jsn_coll"
          }
        },
        "text": "",
        "type": "jsn_coll",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "f59fc9d6-8acb-4210-a701-3130c94c4a84",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.CountTask",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "0c6af12f-e424-405a-bf2a-54270dcec394",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.QualiftList",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "9684b35f-d901-4bd8-a24a-0a42f1be159e",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.QList",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "0798f8de-4790-479f-966f-de5781b657e4",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": false,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.FinalCount",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "daf89b6b-d6e5-43c8-86a0-a8b7d546163d",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": false,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.ONQ",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "0f53a585-e9ef-44c7-821b-d64f2aeebb79",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": false,
      "isSecure": false,
      "version": "1.0",
      "__type": "DateTimeVariable",
      "name": "Flow.StartDateTimeLocal",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "dtm"
          }
        },
        "text": "",
        "type": "dtm",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "f1468025-0896-469e-84e9-636eaf15021b",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": false,
      "isSecure": false,
      "version": "1.0",
      "__type": "DateTimeVariable",
      "name": "Flow.startDateTime",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "dtm"
          }
        },
        "text": "",
        "type": "dtm",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    }
  ],
  "versionMetaData": {
    "inputSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Flow input schema",
      "description": "Schema defining flow input parameters.  Property names map to flow scoped variables marked as a flow input.  If you do not supply a property value for an input variable, the variable value will be set to the initial value configured on it in the flow at flow startup.",
      "definitions": {
        "archString": {
          "archDataTypeId": "str",
          "oneOf": [
            {
              "type": "null",
              "description": "A NOT_SET String value."
            },
            {
              "type": "string",
              "maxLength": 32000,
              "description": "A character string.  Examples: \"\", \"Hello\", \"Just say \\\"No!\\\"\""
            }
          ]
        },
        "archJSON": {
          "archDataTypeId": "jsn",
          "oneOf": [
            {
              "type": "null",
              "description": "A NOT_SET JSON value."
            },
            {
              "type": "object",
              "properties": {
                "data": {
                  "description": "A JSON value."
                }
              }
            }
          ]
        },
        "archInteger": {
          "archDataTypeId": "int",
          "oneOf": [
            {
              "type": "null",
              "description": "A NOT_SET Integer value."
            },
            {
              "type": "integer",
              "minimum": -999999999999999,
              "maximum": 999999999999999,
              "description": "An integral numeric value.  Examples: -3, 0, 1736"
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 16,
              "description": "A string representation of an integral numeric value.  Examples: \"157\", \"-999999999999999\""
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "Flow.conversationId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.queueId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.answeredUserId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.userid": {
          "$ref": "#/definitions/archString"
        },
        "Flow.useremail": {
          "$ref": "#/definitions/archString"
        },
        "Flow.SFStaffID": {
          "$ref": "#/definitions/archString"
        },
        "Flow.direction": {
          "$ref": "#/definitions/archString"
        },
        "Flow.Count": {
          "$ref": "#/definitions/archInteger"
        },
        "Flow.sum": {
          "$ref": "#/definitions/archInteger"
        },
        "Flow.StatusSim": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archInteger"
          }
        },
        "Flow.StatusQualifer": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archString"
          }
        },
        "Flow.qualifer": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archString"
          }
        },
        "Flow.StatsCount": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archInteger"
          }
        },
        "Flow.JSONData": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archJSON"
          }
        },
        "Flow.CountTask": {
          "$ref": "#/definitions/archString"
        },
        "Flow.QualiftList": {
          "$ref": "#/definitions/archString"
        },
        "Flow.QList": {
          "$ref": "#/definitions/archString"
        }
      },
      "additionalProperties": false
    },
    "outputSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Flow output schema",
      "description": "Schema defining flow output parameters.  Property names map to flow scoped variables marked as a flow output.",
      "definitions": {
        "archString": {
          "archDataTypeId": "str",
          "oneOf": [
            {
              "type": "null",
              "description": "A NOT_SET String value."
            },
            {
              "type": "string",
              "maxLength": 32000,
              "description": "A character string.  Examples: \"\", \"Hello\", \"Just say \\\"No!\\\"\""
            }
          ]
        },
        "archJSON": {
          "archDataTypeId": "jsn",
          "oneOf": [
            {
              "type": "null",
              "description": "A NOT_SET JSON value."
            },
            {
              "type": "object",
              "properties": {
                "data": {
                  "description": "A JSON value."
                }
              }
            }
          ]
        },
        "archInteger": {
          "archDataTypeId": "int",
          "oneOf": [
            {
              "type": "null",
              "description": "A NOT_SET Integer value."
            },
            {
              "type": "integer",
              "minimum": -999999999999999,
              "maximum": 999999999999999,
              "description": "An integral numeric value.  Examples: -3, 0, 1736"
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 16,
              "description": "A string representation of an integral numeric value.  Examples: \"157\", \"-999999999999999\""
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "Flow.conversationId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.queueId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.answeredUserId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.userid": {
          "$ref": "#/definitions/archString"
        },
        "Flow.useremail": {
          "$ref": "#/definitions/archString"
        },
        "Flow.SFStaffID": {
          "$ref": "#/definitions/archString"
        },
        "Flow.direction": {
          "$ref": "#/definitions/archString"
        },
        "Flow.Count": {
          "$ref": "#/definitions/archInteger"
        },
        "Flow.sum": {
          "$ref": "#/definitions/archInteger"
        },
        "Flow.StatusSim": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archInteger"
          }
        },
        "Flow.StatusQualifer": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archString"
          }
        },
        "Flow.qualifer": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archString"
          }
        },
        "Flow.StatsCount": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archInteger"
          }
        },
        "Flow.JSONData": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archJSON"
          }
        },
        "Flow.CountTask": {
          "$ref": "#/definitions/archString"
        },
        "Flow.QualiftList": {
          "$ref": "#/definitions/archString"
        },
        "Flow.QList": {
          "$ref": "#/definitions/archString"
        }
      },
      "additionalProperties": false
    }
  }
}