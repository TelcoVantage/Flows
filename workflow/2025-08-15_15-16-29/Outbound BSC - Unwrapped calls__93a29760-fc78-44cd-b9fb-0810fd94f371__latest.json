{
  "nextTrackingNumber": 24,
  "defaultLanguage": "en-AU",
  "description": "This flow changes the subject in SF task to \"unwrapped\" if agent do not wrap. \n\nCurrently it will have \"Call {Date / Time}\"",
  "initialSequence": "f0ef2f8d-c1ca-4431-9a2e-377494dbd645",
  "name": "Outbound BSC - Unwrapped calls",
  "uiMetaData": {
    "bridgeServerActions": [],
    "screenPops": [],
    "actionServiceActions": [
      {
        "id": "custom_-_7107c56a-c564-469f-a0dc-79c24bbf712c",
        "name": "Update objects",
        "category": "Salesforce Data Actions - AUS Prod",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Object ID Request",
                "description": "A object ID-based request.",
                "type": "object",
                "required": [
                  "Object_SF_Type",
                  "Object_SF_ID",
                  "Object_Field_Name",
                  "Object_Field_Value"
                ],
                "properties": {
                  "Object_SF_Type": {
                    "description": "The SF Object type to update",
                    "type": "string",
                    "name": "Object_SF_Type",
                    "required": true
                  },
                  "Object_SF_ID": {
                    "description": "The SF internal Object ID to update ",
                    "type": "string",
                    "name": "Object_SF_ID",
                    "required": true
                  },
                  "Object_Field_Name": {
                    "description": "The Salesforce Object field API name to update",
                    "type": "string",
                    "name": "Object_Field_Name",
                    "required": true
                  },
                  "Object_Field_Value": {
                    "description": "The value to update the Object field.",
                    "type": "string",
                    "name": "Object_Field_Value",
                    "required": true
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Object ID Request",
          "description": "A object ID-based request.",
          "type": "object",
          "required": [
            "Object_SF_Type",
            "Object_SF_ID",
            "Object_Field_Name",
            "Object_Field_Value"
          ],
          "properties": {
            "Object_SF_Type": {
              "description": "The SF Object type to update",
              "type": "string",
              "name": "Object_SF_Type",
              "required": true
            },
            "Object_SF_ID": {
              "description": "The SF internal Object ID to update ",
              "type": "string",
              "name": "Object_SF_ID",
              "required": true
            },
            "Object_Field_Name": {
              "description": "The Salesforce Object field API name to update",
              "type": "string",
              "name": "Object_Field_Name",
              "required": true
            },
            "Object_Field_Value": {
              "description": "The value to update the Object field.",
              "type": "string",
              "name": "Object_Field_Value",
              "required": true
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      },
      {
        "id": "custom_-_233ddc93-623e-4868-9321-c3e926b5c7cf",
        "name": "User ID to Name (v4)",
        "category": "Genesys Cloud Data Actions",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserID": {
                    "type": "string",
                    "name": "UserID",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "name": "name",
                    "required": false
                  },
                  "title": {
                    "type": "string",
                    "name": "title",
                    "required": false
                  },
                  "email": {
                    "type": "string",
                    "name": "email",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "type": "object",
          "properties": {
            "UserID": {
              "type": "string",
              "name": "UserID",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "name": "name",
              "required": false
            },
            "title": {
              "type": "string",
              "name": "title",
              "required": false
            },
            "email": {
              "type": "string",
              "name": "email",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      },
      {
        "id": "custom_-_ff1c3296-b8e1-4b12-91cb-a7d906d87c61",
        "name": "Get Task ID From Interaction ID (v3)",
        "category": "Salesforce Data Actions - AUS Prod",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "ConversationID": {
                    "type": "string",
                    "name": "ConversationID",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "records.Id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "records.Id",
                    "required": false
                  },
                  "records.Subject": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "records.Subject",
                    "required": false
                  },
                  "records.Lead__c": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "records.Lead__c",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "type": "object",
          "properties": {
            "ConversationID": {
              "type": "string",
              "name": "ConversationID",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "type": "object",
          "properties": {
            "records.Id": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "records.Id",
              "required": false
            },
            "records.Subject": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "records.Subject",
              "required": false
            },
            "records.Lead__c": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "records.Lead__c",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      }
    ]
  },
  "supportedLanguages": [
    "en-AU"
  ],
  "manifest": {
    "dataAction": [
      {
        "name": "Update objects",
        "id": "custom_-_7107c56a-c564-469f-a0dc-79c24bbf712c",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "d670761f-1b9d-47ed-8eeb-ebf5dc38d55c",
            "name": "Amed SF Task Subject"
          },
          {
            "actionName": "Call Data Action",
            "id": "6ce6eba7-d48a-4515-b21b-d275a12efb3c",
            "name": "Amend SF Lead ID"
          }
        ]
      },
      {
        "name": "User ID to Name (v4)",
        "id": "custom_-_233ddc93-623e-4868-9321-c3e926b5c7cf",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "e964cf53-5ca5-4fa2-b04c-79291ac3bd2f",
            "name": "Gets user details"
          }
        ]
      },
      {
        "name": "Get Task ID From Interaction ID (v3)",
        "id": "custom_-_ff1c3296-b8e1-4b12-91cb-a7d906d87c61",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "668c04ba-78bc-443d-9879-ba3de8b0b68c",
            "name": "Gets SF Task ID from PC ConvoID"
          }
        ]
      }
    ],
    "language": [
      {
        "id": "en-AU"
      }
    ],
    "userPrompt": [],
    "systemPrompt": []
  },
  "type": "workflow",
  "debugSettings": {},
  "errorHandling": {
    "queue": {
      "config": {
        "emp": {
          "pos": 1,
          "text": "",
          "type": "que"
        }
      },
      "text": "",
      "type": "que",
      "uiMetaData": {
        "mode": 1
      },
      "metaData": {},
      "version": 2,
      "outOfService": true
    },
    "handlingType": "EndWorkflow"
  },
  "defaultSettings": {},
  "flowMetaData": {
    "flowDocumentVersion": "1.0",
    "minimumServerVersion": "1.0",
    "ttsDataVersion": "1.0"
  },
  "flowSequenceItemList": [
    {
      "startAction": "e964cf53-5ca5-4fa2-b04c-79291ac3bd2f",
      "trackingId": 10,
      "id": "f0ef2f8d-c1ca-4431-9a2e-377494dbd645",
      "name": "Initial State",
      "uiMetaData": {
        "collapsed": false
      },
      "__type": "State",
      "actionList": [
        {
          "trackingId": 11,
          "id": "60713855-f51b-4b79-a3bd-28fddc193bce",
          "name": "End Workflow",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "EndWorkflowAction",
          "exitReason": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "str"
              }
            },
            "text": "",
            "type": "str",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2
          }
        },
        {
          "nextAction": "60713855-f51b-4b79-a3bd-28fddc193bce",
          "trackingId": 12,
          "id": "022c27d3-fd26-43f9-93b8-1c6ae5ea68a3",
          "name": "If Dept of user = sales",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DecisionAction",
          "expression": {
            "config": {
              "If": {
                "pos": 1,
                "text": "If(IsSet(Flow.userTitle) And IsSet(\"Sales\"), Contains(Flow.userTitle, \"Sales\", true), false)",
                "operands": [
                  {
                    "And": {
                      "pos": 26,
                      "operands": [
                        {
                          "IsSet": {
                            "pos": 4,
                            "operands": [
                              {
                                "ref": {
                                  "pos": 10,
                                  "text": "Flow.userTitle",
                                  "type": "str",
                                  "val": "90af8646-5b73-4fb2-9d78-03abc8320491"
                                }
                              }
                            ],
                            "type": "bln"
                          }
                        },
                        {
                          "IsSet": {
                            "pos": 30,
                            "operands": [
                              {
                                "lit": {
                                  "pos": 36,
                                  "text": "Sales",
                                  "type": "str"
                                }
                              }
                            ],
                            "type": "bln"
                          }
                        }
                      ],
                      "type": "bln"
                    }
                  },
                  {
                    "Contains": {
                      "pos": 46,
                      "operands": [
                        {
                          "ref": {
                            "pos": 55,
                            "text": "Flow.userTitle",
                            "type": "str",
                            "val": "90af8646-5b73-4fb2-9d78-03abc8320491"
                          }
                        },
                        {
                          "lit": {
                            "pos": 71,
                            "text": "Sales",
                            "type": "str"
                          }
                        },
                        {
                          "lit": {
                            "pos": 80,
                            "text": "true",
                            "type": "bln"
                          }
                        }
                      ],
                      "type": "bln"
                    }
                  },
                  {
                    "lit": {
                      "pos": 87,
                      "text": "false",
                      "type": "bln"
                    }
                  }
                ],
                "type": "bln"
              }
            },
            "text": "If(IsSet(Flow.userTitle) And IsSet(\"Sales\"), Contains(Flow.userTitle, \"Sales\", true), false)",
            "type": "bln",
            "uiMetaData": {
              "mode": 4,
              "builder": {
                "builderDefId": "__BUILDER_PARTS_GENERIC_BOOLEAN__",
                "id": "3da45106-45f9-4fc8-b4a7-4bda4826bcc5",
                "version": 1,
                "builderParts": [
                  {
                    "builderPartDefId": "__BUILDER_PART_STRING_CONTAINS__",
                    "id": "b97baee8-5eed-4409-983d-8c84599508d6",
                    "outOfService": false,
                    "version": 1,
                    "builderPartExpressions": [
                      {
                        "config": {
                          "ref": {
                            "pos": 1,
                            "text": "Flow.userTitle",
                            "type": "str",
                            "val": "90af8646-5b73-4fb2-9d78-03abc8320491"
                          }
                        },
                        "text": "Flow.userTitle",
                        "type": "str",
                        "uiMetaData": {
                          "mode": 0
                        },
                        "metaData": {
                          "references": [
                            {
                              "id": "90af8646-5b73-4fb2-9d78-03abc8320491",
                              "type": "str",
                              "isSysRef": false,
                              "name": "Flow.userTitle"
                            }
                          ]
                        },
                        "version": 2
                      },
                      {
                        "config": {
                          "lit": {
                            "pos": 1,
                            "text": "Sales",
                            "type": "str"
                          }
                        },
                        "text": "Sales",
                        "type": "str",
                        "uiMetaData": {
                          "mode": 1
                        },
                        "metaData": {},
                        "version": 2
                      },
                      {
                        "config": {
                          "lit": {
                            "pos": 1,
                            "text": "true",
                            "type": "bln"
                          }
                        },
                        "text": "true",
                        "type": "bln",
                        "uiMetaData": {
                          "mode": 1
                        },
                        "metaData": {},
                        "version": 2
                      }
                    ]
                  }
                ]
              }
            },
            "metaData": {
              "references": [
                {
                  "id": "90af8646-5b73-4fb2-9d78-03abc8320491",
                  "type": "str",
                  "isSysRef": false,
                  "name": "Flow.userTitle"
                }
              ]
            },
            "version": 2,
            "properties": {}
          },
          "paths": [
            {
              "nextActionId": "7c0fe1e4-aa36-43b0-b44a-38bd9280cb2a",
              "label": "Yes",
              "outputId": "__YES__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "nextActionId": "fce4390b-69a8-4e12-b69b-49be03f4656e",
              "label": "No",
              "outputId": "__NO__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "trackingId": 13,
          "id": "fce4390b-69a8-4e12-b69b-49be03f4656e",
          "name": "End Workflow",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "EndWorkflowAction",
          "exitReason": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "str"
              }
            },
            "text": "",
            "type": "str",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2
          }
        },
        {
          "nextAction": "668c04ba-78bc-443d-9879-ba3de8b0b68c",
          "trackingId": 15,
          "id": "7c0fe1e4-aa36-43b0-b44a-38bd9280cb2a",
          "name": "Wait",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "WaitAction",
          "trimDurationNearMaxRunningTime": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "false",
                "type": "bln"
              }
            },
            "text": "false",
            "type": "bln",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "duration": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H8M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H8M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          }
        },
        {
          "trackingId": 18,
          "id": "c7000755-245a-4cad-bfc2-8b6d9663a3aa",
          "name": "If subject containts 2023",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DecisionAction",
          "expression": {
            "config": {
              "If": {
                "pos": 1,
                "text": "If(IsSet(ToString(Flow.Subject)) And IsSet(\"2023\"), Contains(ToString(Flow.Subject), \"2023\", true), false)",
                "operands": [
                  {
                    "And": {
                      "pos": 34,
                      "operands": [
                        {
                          "IsSet": {
                            "pos": 4,
                            "operands": [
                              {
                                "ToString": {
                                  "pos": 10,
                                  "operands": [
                                    {
                                      "ref": {
                                        "pos": 19,
                                        "text": "Flow.Subject",
                                        "type": "str_coll",
                                        "val": "7ea51365-035f-473d-b2d3-de82c229a3bd"
                                      }
                                    }
                                  ],
                                  "type": "str"
                                }
                              }
                            ],
                            "type": "bln"
                          }
                        },
                        {
                          "IsSet": {
                            "pos": 38,
                            "operands": [
                              {
                                "lit": {
                                  "pos": 44,
                                  "text": "2023",
                                  "type": "str"
                                }
                              }
                            ],
                            "type": "bln"
                          }
                        }
                      ],
                      "type": "bln"
                    }
                  },
                  {
                    "Contains": {
                      "pos": 53,
                      "operands": [
                        {
                          "ToString": {
                            "pos": 62,
                            "operands": [
                              {
                                "ref": {
                                  "pos": 71,
                                  "text": "Flow.Subject",
                                  "type": "str_coll",
                                  "val": "7ea51365-035f-473d-b2d3-de82c229a3bd"
                                }
                              }
                            ],
                            "type": "str"
                          }
                        },
                        {
                          "lit": {
                            "pos": 86,
                            "text": "2023",
                            "type": "str"
                          }
                        },
                        {
                          "lit": {
                            "pos": 94,
                            "text": "true",
                            "type": "bln"
                          }
                        }
                      ],
                      "type": "bln"
                    }
                  },
                  {
                    "lit": {
                      "pos": 101,
                      "text": "false",
                      "type": "bln"
                    }
                  }
                ],
                "type": "bln"
              }
            },
            "text": "If(IsSet(ToString(Flow.Subject)) And IsSet(\"2023\"), Contains(ToString(Flow.Subject), \"2023\", true), false)",
            "type": "bln",
            "uiMetaData": {
              "mode": 4,
              "builder": {
                "builderDefId": "__BUILDER_PARTS_GENERIC_BOOLEAN__",
                "id": "1caa9c24-37c8-428a-a4ae-40ba7cec86a6",
                "version": 1,
                "builderParts": [
                  {
                    "builderPartDefId": "__BUILDER_PART_STRING_CONTAINS__",
                    "id": "4a1ce8a1-8427-478f-9a6a-703d031d7510",
                    "outOfService": false,
                    "version": 1,
                    "builderPartExpressions": [
                      {
                        "config": {
                          "ToString": {
                            "pos": 1,
                            "text": "ToString(Flow.Subject)",
                            "operands": [
                              {
                                "ref": {
                                  "pos": 1,
                                  "text": "Flow.Subject",
                                  "type": "str_coll",
                                  "val": "7ea51365-035f-473d-b2d3-de82c229a3bd"
                                }
                              }
                            ],
                            "type": "str"
                          }
                        },
                        "text": "Flow.Subject",
                        "type": "str",
                        "uiMetaData": {
                          "mode": 0
                        },
                        "metaData": {
                          "references": [
                            {
                              "id": "7ea51365-035f-473d-b2d3-de82c229a3bd",
                              "type": "str_coll",
                              "isSysRef": false,
                              "name": "Flow.Subject"
                            }
                          ]
                        },
                        "version": 2
                      },
                      {
                        "config": {
                          "lit": {
                            "pos": 1,
                            "text": "2023",
                            "type": "str"
                          }
                        },
                        "text": "2023",
                        "type": "str",
                        "uiMetaData": {
                          "mode": 1
                        },
                        "metaData": {},
                        "version": 2
                      },
                      {
                        "config": {
                          "lit": {
                            "pos": 1,
                            "text": "true",
                            "type": "bln"
                          }
                        },
                        "text": "true",
                        "type": "bln",
                        "uiMetaData": {
                          "mode": 1
                        },
                        "metaData": {},
                        "version": 2
                      }
                    ]
                  }
                ]
              }
            },
            "metaData": {
              "references": [
                {
                  "id": "7ea51365-035f-473d-b2d3-de82c229a3bd",
                  "type": "str_coll",
                  "isSysRef": false,
                  "name": "Flow.Subject"
                }
              ]
            },
            "version": 2,
            "properties": {}
          },
          "paths": [
            {
              "nextActionId": "d670761f-1b9d-47ed-8eeb-ebf5dc38d55c",
              "label": "Yes",
              "outputId": "__YES__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "No",
              "outputId": "__NO__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "actionName": "Update objects",
          "actionId": "custom_-_7107c56a-c564-469f-a0dc-79c24bbf712c",
          "category": {
            "id": "Salesforce Data Actions - AUS Prod",
            "name": "Salesforce Data Actions - AUS Prod"
          },
          "useSuggestedTimeout": true,
          "nextAction": "6ce6eba7-d48a-4515-b21b-d275a12efb3c",
          "trackingId": 17,
          "id": "d670761f-1b9d-47ed-8eeb-ebf5dc38d55c",
          "name": "Amed SF Task Subject",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "Object_SF_Type",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Task",
                    "type": "str"
                  }
                },
                "text": "Task",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_SF_ID",
              "value": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.TaskID)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 1,
                          "text": "Flow.TaskID",
                          "type": "str_coll",
                          "val": "07fdaa6b-95c2-4862-b2a1-e3ad502b0a51"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "Flow.TaskID",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "07fdaa6b-95c2-4862-b2a1-e3ad502b0a51",
                      "type": "str_coll",
                      "isSysRef": false,
                      "name": "Flow.TaskID"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "Object_Field_Name",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Subject",
                    "type": "str"
                  }
                },
                "text": "Subject",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_Field_Value",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Unwrapped",
                    "type": "str"
                  }
                },
                "text": "Unwrapped",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "outputs": [],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "actionName": "Update objects",
          "actionId": "custom_-_7107c56a-c564-469f-a0dc-79c24bbf712c",
          "category": {
            "id": "Salesforce Data Actions - AUS Prod",
            "name": "Salesforce Data Actions - AUS Prod"
          },
          "useSuggestedTimeout": true,
          "trackingId": 19,
          "id": "6ce6eba7-d48a-4515-b21b-d275a12efb3c",
          "name": "Amend SF Lead ID",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "Object_SF_Type",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Lead",
                    "type": "str"
                  }
                },
                "text": "Lead",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_SF_ID",
              "value": {
                "config": {
                  "ToString": {
                    "pos": 1,
                    "text": "ToString(Flow.LeadID)",
                    "operands": [
                      {
                        "ref": {
                          "pos": 1,
                          "text": "Flow.LeadID",
                          "type": "str_coll",
                          "val": "b0a51079-d250-41f8-afa5-f722f8e19c34"
                        }
                      }
                    ],
                    "type": "str"
                  }
                },
                "text": "Flow.LeadID",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "b0a51079-d250-41f8-afa5-f722f8e19c34",
                      "type": "str_coll",
                      "isSysRef": false,
                      "name": "Flow.LeadID"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "Object_Field_Name",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Last_Activity_Call_Result__c",
                    "type": "str"
                  }
                },
                "text": "Last_Activity_Call_Result__c",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "Object_Field_Value",
              "value": {
                "config": {
                  "lit": {
                    "pos": 1,
                    "text": "Unwrapped",
                    "type": "str"
                  }
                },
                "text": "Unwrapped",
                "type": "str",
                "uiMetaData": {
                  "mode": 1
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "outputs": [],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "actionName": "User ID to Name (v4)",
          "actionId": "custom_-_233ddc93-623e-4868-9321-c3e926b5c7cf",
          "category": {
            "id": "Genesys Cloud Data Actions",
            "name": "Genesys Cloud Data Actions"
          },
          "useSuggestedTimeout": true,
          "nextAction": "022c27d3-fd26-43f9-93b8-1c6ae5ea68a3",
          "trackingId": 21,
          "id": "e964cf53-5ca5-4fa2-b04c-79291ac3bd2f",
          "name": "Gets user details",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "UserID",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.userId",
                    "type": "str",
                    "val": "c59394ee-be12-4d52-8104-30b3ad400a74"
                  }
                },
                "text": "Flow.userId",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "c59394ee-be12-4d52-8104-30b3ad400a74",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.userId"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [
            {
              "name": "name",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.username",
                    "type": "str",
                    "val": "6eda7d95-8926-43e9-bb3d-59553b63eaeb"
                  }
                },
                "text": "Flow.username",
                "type": "str",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "6eda7d95-8926-43e9-bb3d-59553b63eaeb",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.username"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "title",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.userTitle",
                    "type": "str",
                    "val": "90af8646-5b73-4fb2-9d78-03abc8320491"
                  }
                },
                "text": "Flow.userTitle",
                "type": "str",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "90af8646-5b73-4fb2-9d78-03abc8320491",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.userTitle"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "email",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.UserEmail",
                    "type": "str",
                    "val": "18f7cc8d-e183-4a88-bf80-b75ad33a1f15"
                  }
                },
                "text": "Flow.UserEmail",
                "type": "str",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "18f7cc8d-e183-4a88-bf80-b75ad33a1f15",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.UserEmail"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "actionName": "Get Task ID From Interaction ID (v3)",
          "actionId": "custom_-_ff1c3296-b8e1-4b12-91cb-a7d906d87c61",
          "category": {
            "id": "Salesforce Data Actions - AUS Prod",
            "name": "Salesforce Data Actions - AUS Prod"
          },
          "useSuggestedTimeout": true,
          "nextAction": "c7000755-245a-4cad-bfc2-8b6d9663a3aa",
          "trackingId": 14,
          "id": "668c04ba-78bc-443d-9879-ba3de8b0b68c",
          "name": "Gets SF Task ID from PC ConvoID",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2,
            "outOfService": true
          },
          "inputs": [
            {
              "name": "ConversationID",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.conversationId",
                    "type": "str",
                    "val": "25b0c57a-4b9e-400f-a2fc-e82797726a63"
                  }
                },
                "text": "Flow.conversationId",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "25b0c57a-4b9e-400f-a2fc-e82797726a63",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.conversationId"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [
            {
              "name": "records.Id",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.TaskID",
                    "type": "str_coll",
                    "val": "07fdaa6b-95c2-4862-b2a1-e3ad502b0a51"
                  }
                },
                "text": "Flow.TaskID",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "07fdaa6b-95c2-4862-b2a1-e3ad502b0a51",
                      "type": "str_coll",
                      "isSysRef": false,
                      "name": "Flow.TaskID"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "records.Subject",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.Subject",
                    "type": "str_coll",
                    "val": "7ea51365-035f-473d-b2d3-de82c229a3bd"
                  }
                },
                "text": "Flow.Subject",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "7ea51365-035f-473d-b2d3-de82c229a3bd",
                      "type": "str_coll",
                      "isSysRef": false,
                      "name": "Flow.Subject"
                    }
                  ]
                },
                "version": 2
              }
            },
            {
              "name": "records.Lead__c",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.LeadID",
                    "type": "str_coll",
                    "val": "b0a51079-d250-41f8-afa5-f722f8e19c34"
                  }
                },
                "text": "Flow.LeadID",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 2
                },
                "metaData": {
                  "references": [
                    {
                      "id": "b0a51079-d250-41f8-afa5-f722f8e19c34",
                      "type": "str_coll",
                      "isSysRef": false,
                      "name": "Flow.LeadID"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        }
      ],
      "variables": []
    }
  ],
  "supportedLanguageOptions": [
    {
      "language": "en-AU"
    }
  ],
  "variables": [
    {
      "id": "c59394ee-be12-4d52-8104-30b3ad400a74",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.userId",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "25b0c57a-4b9e-400f-a2fc-e82797726a63",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.conversationId",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "07fdaa6b-95c2-4862-b2a1-e3ad502b0a51",
      "isCollection": true,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.TaskID",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str_coll"
          }
        },
        "text": "",
        "type": "str_coll",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "7ea51365-035f-473d-b2d3-de82c229a3bd",
      "isCollection": true,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.Subject",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str_coll"
          }
        },
        "text": "",
        "type": "str_coll",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "b0a51079-d250-41f8-afa5-f722f8e19c34",
      "isCollection": true,
      "isInternal": false,
      "isOutput": false,
      "isInput": false,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.LeadID",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str_coll"
          }
        },
        "text": "",
        "type": "str_coll",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "6eda7d95-8926-43e9-bb3d-59553b63eaeb",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": false,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.username",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "90af8646-5b73-4fb2-9d78-03abc8320491",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": false,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.userTitle",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "59f60ba4-a4c3-4d05-a7ea-18f19c409eaa",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": false,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.userDept",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "392ae50e-a440-4f2d-bb13-ad9c313e37e8",
      "isCollection": false,
      "isInternal": false,
      "isOutput": true,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.direction",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2,
        "properties": {}
      }
    },
    {
      "id": "18f7cc8d-e183-4a88-bf80-b75ad33a1f15",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": false,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.UserEmail",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    }
  ],
  "versionMetaData": {
    "inputSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Flow input schema",
      "description": "Schema defining flow input parameters.  Property names map to flow scoped variables marked as a flow input.  If you do not supply a property value for an input variable, the variable value will be set to the initial value configured on it in the flow at flow startup.",
      "definitions": {
        "archString": {
          "archDataTypeId": "str",
          "oneOf": [
            {
              "type": "null",
              "description": "A NOT_SET String value."
            },
            {
              "type": "string",
              "maxLength": 32000,
              "description": "A character string.  Examples: \"\", \"Hello\", \"Just say \\\"No!\\\"\""
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "Flow.userId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.conversationId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.TaskID": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archString"
          }
        },
        "Flow.Subject": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archString"
          }
        },
        "Flow.direction": {
          "$ref": "#/definitions/archString"
        }
      },
      "additionalProperties": false
    },
    "outputSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Flow output schema",
      "description": "Schema defining flow output parameters.  Property names map to flow scoped variables marked as a flow output.",
      "definitions": {
        "archString": {
          "archDataTypeId": "str",
          "oneOf": [
            {
              "type": "null",
              "description": "A NOT_SET String value."
            },
            {
              "type": "string",
              "maxLength": 32000,
              "description": "A character string.  Examples: \"\", \"Hello\", \"Just say \\\"No!\\\"\""
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "Flow.userId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.conversationId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.TaskID": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archString"
          }
        },
        "Flow.Subject": {
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/archString"
          }
        },
        "Flow.direction": {
          "$ref": "#/definitions/archString"
        }
      },
      "additionalProperties": false
    }
  }
}