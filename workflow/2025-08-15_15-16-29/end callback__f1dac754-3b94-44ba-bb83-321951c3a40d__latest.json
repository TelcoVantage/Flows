{
  "nextTrackingNumber": 23,
  "defaultLanguage": "en-AU",
  "description": "This disconnects call-back after a wrap",
  "initialSequence": "42692d48-c03f-40c8-b9d8-9b3f45bf409b",
  "name": "end callback ",
  "uiMetaData": {
    "bridgeServerActions": [],
    "screenPops": [],
    "actionServiceActions": [
      {
        "id": "custom_-_f540db4a-1687-4e22-897b-71f6b4cb2f2b",
        "name": "Disconnect interaction",
        "category": "Genesys Cloud Data Actions",
        "contract": {
          "input": {
            "inputSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {
                  "ConversationID": {
                    "type": "string",
                    "name": "ConversationID",
                    "required": false
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "output": {
            "errorSchemaFlattened": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ErrorBody",
                "description": "Detailed information about an error response.",
                "type": "object",
                "required": [
                  "errorCode",
                  "status",
                  "userMessage"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "name": "errors",
                    "required": false
                  },
                  "errorCode": {
                    "description": "A code unique to this error.",
                    "type": "string",
                    "name": "errorCode",
                    "required": false
                  },
                  "status": {
                    "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
                    "type": "integer",
                    "name": "status",
                    "required": false
                  },
                  "correlationId": {
                    "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
                    "type": "string",
                    "name": "correlationId",
                    "required": false
                  },
                  "entityId": {
                    "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityId",
                    "required": false
                  },
                  "entityName": {
                    "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
                    "type": "string",
                    "name": "entityName",
                    "required": false
                  },
                  "userMessage": {
                    "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
                    "type": "string",
                    "name": "userMessage",
                    "required": false
                  },
                  "userParamsMessage": {
                    "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
                    "type": "string",
                    "name": "userParamsMessage",
                    "required": false
                  },
                  "userParams.key": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Key name of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.key",
                    "required": false
                  },
                  "userParams.value": {
                    "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
                    "type": "array",
                    "items": {
                      "description": "Value of userParam  pair.",
                      "type": "string"
                    },
                    "name": "userParams.value",
                    "required": false
                  },
                  "details.errorCode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.errorCode",
                    "required": false
                  },
                  "details.fieldName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.fieldName",
                    "required": false
                  },
                  "details.entityId": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityId",
                    "required": false
                  },
                  "details.entityName": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "name": "details.entityName",
                    "required": false
                  }
                },
                "additionalProperties": false
              }
            },
            "successSchemaFlattened": {
              "schema": {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              }
            }
          }
        },
        "result": "ok",
        "inputSchema": {
          "type": "object",
          "properties": {
            "ConversationID": {
              "type": "string",
              "name": "ConversationID",
              "required": false
            }
          },
          "additionalProperties": true
        },
        "successSchema": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "errorSchema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ErrorBody",
          "description": "Detailed information about an error response.",
          "type": "object",
          "required": [
            "errorCode",
            "status",
            "userMessage"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "name": "errors",
              "required": false
            },
            "errorCode": {
              "description": "A code unique to this error.",
              "type": "string",
              "name": "errorCode",
              "required": false
            },
            "status": {
              "description": "The HTTP status code for this message (400, 401, 403, 404, 500, etc.)",
              "type": "integer",
              "name": "status",
              "required": false
            },
            "correlationId": {
              "description": "The correlation Id or context Id for this message. If left blank the Public API will look at the HTTP response header 'ININ-Correlation-Id' instead.",
              "type": "string",
              "name": "correlationId",
              "required": false
            },
            "entityId": {
              "description": "The ID of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityId",
              "required": false
            },
            "entityName": {
              "description": "The name of the entity this error refers to. Only used in BackendErrorBody instances within the errors array.",
              "type": "string",
              "name": "entityName",
              "required": false
            },
            "userMessage": {
              "description": "A customer friendly message. This should be a complete sentence, use proper grammar and only include information useful to a customer. This is not a dev message and should not include things like Org Id",
              "type": "string",
              "name": "userMessage",
              "required": false
            },
            "userParamsMessage": {
              "description": "This is the same as message except it uses template fields for variable replacement. For instance: 'User {username} was not found'",
              "type": "string",
              "name": "userParamsMessage",
              "required": false
            },
            "userParams.key": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Key name of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.key",
              "required": false
            },
            "userParams.value": {
              "description": "Used in conjunction with userParamsMessage. These are the template parameters. For instance: UserParam.key = 'username', UserParam.value = 'john.doe'",
              "type": "array",
              "items": {
                "description": "Value of userParam  pair.",
                "type": "string"
              },
              "name": "userParams.value",
              "required": false
            },
            "details.errorCode": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.errorCode",
              "required": false
            },
            "details.fieldName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.fieldName",
              "required": false
            },
            "details.entityId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityId",
              "required": false
            },
            "details.entityName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "details.entityName",
              "required": false
            }
          },
          "additionalProperties": false
        }
      }
    ]
  },
  "supportedLanguages": [
    "en-AU"
  ],
  "manifest": {
    "dataAction": [
      {
        "name": "Disconnect interaction",
        "id": "custom_-_f540db4a-1687-4e22-897b-71f6b4cb2f2b",
        "context": [
          {
            "actionName": "Call Data Action",
            "id": "47ed6ea9-6a8a-4a66-be52-8fcd2baab060",
            "name": "Call Data Action"
          }
        ]
      }
    ],
    "language": [
      {
        "id": "en-AU"
      }
    ],
    "userPrompt": [],
    "systemPrompt": []
  },
  "type": "workflow",
  "debugSettings": {},
  "errorHandling": {
    "queue": {
      "config": {
        "emp": {
          "pos": 1,
          "text": "",
          "type": "que"
        }
      },
      "text": "",
      "type": "que",
      "uiMetaData": {
        "mode": 1
      },
      "metaData": {},
      "version": 2,
      "outOfService": true
    },
    "handlingType": "EndWorkflow"
  },
  "defaultSettings": {},
  "flowMetaData": {
    "flowDocumentVersion": "1.0",
    "minimumServerVersion": "1.0",
    "ttsDataVersion": "1.0"
  },
  "flowSequenceItemList": [
    {
      "startAction": "921785bc-2fc2-479e-838d-eb7323c1394d",
      "trackingId": 10,
      "id": "42692d48-c03f-40c8-b9d8-9b3f45bf409b",
      "name": "Initial State",
      "uiMetaData": {
        "collapsed": false
      },
      "__type": "State",
      "actionList": [
        {
          "trackingId": 11,
          "id": "a92b967e-e3ef-44a7-8f15-b4d2d7c2d0f4",
          "name": "End Workflow",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "EndWorkflowAction",
          "exitReason": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "str"
              }
            },
            "text": "",
            "type": "str",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2
          }
        },
        {
          "nextAction": "5a34b8c7-a48e-4b8f-b150-78d5d3775067",
          "trackingId": 12,
          "id": "921785bc-2fc2-479e-838d-eb7323c1394d",
          "name": "Decision",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DecisionAction",
          "expression": {
            "config": {
              "If": {
                "pos": 1,
                "text": "If(IsSet(Flow.queueId) And IsSet(\"bc57f394-501f-4987-9f58-4b90c23befc0\"), Contains(Flow.queueId, \"bc57f394-501f-4987-9f58-4b90c23befc0\", true), false)",
                "operands": [
                  {
                    "And": {
                      "pos": 24,
                      "operands": [
                        {
                          "IsSet": {
                            "pos": 4,
                            "operands": [
                              {
                                "ref": {
                                  "pos": 10,
                                  "text": "Flow.queueId",
                                  "type": "str",
                                  "val": "ae4d402b-e5cf-4c24-80a7-9bd7e2f87267"
                                }
                              }
                            ],
                            "type": "bln"
                          }
                        },
                        {
                          "IsSet": {
                            "pos": 28,
                            "operands": [
                              {
                                "lit": {
                                  "pos": 34,
                                  "text": "bc57f394-501f-4987-9f58-4b90c23befc0",
                                  "type": "str"
                                }
                              }
                            ],
                            "type": "bln"
                          }
                        }
                      ],
                      "type": "bln"
                    }
                  },
                  {
                    "Contains": {
                      "pos": 75,
                      "operands": [
                        {
                          "ref": {
                            "pos": 84,
                            "text": "Flow.queueId",
                            "type": "str",
                            "val": "ae4d402b-e5cf-4c24-80a7-9bd7e2f87267"
                          }
                        },
                        {
                          "lit": {
                            "pos": 98,
                            "text": "bc57f394-501f-4987-9f58-4b90c23befc0",
                            "type": "str"
                          }
                        },
                        {
                          "lit": {
                            "pos": 138,
                            "text": "true",
                            "type": "bln"
                          }
                        }
                      ],
                      "type": "bln"
                    }
                  },
                  {
                    "lit": {
                      "pos": 145,
                      "text": "false",
                      "type": "bln"
                    }
                  }
                ],
                "type": "bln"
              }
            },
            "text": "If(IsSet(Flow.queueId) And IsSet(\"bc57f394-501f-4987-9f58-4b90c23befc0\"), Contains(Flow.queueId, \"bc57f394-501f-4987-9f58-4b90c23befc0\", true), false)",
            "type": "bln",
            "uiMetaData": {
              "mode": 4,
              "builder": {
                "builderDefId": "__BUILDER_PARTS_GENERIC_BOOLEAN__",
                "id": "9eb4bee8-6a97-434c-b988-be2314c9bc34",
                "version": 1,
                "builderParts": [
                  {
                    "builderPartDefId": "__BUILDER_PART_STRING_CONTAINS__",
                    "id": "5fa3306a-2e58-475a-afaf-53b70f6cefb4",
                    "outOfService": false,
                    "version": 1,
                    "builderPartExpressions": [
                      {
                        "config": {
                          "ref": {
                            "pos": 1,
                            "text": "Flow.queueId",
                            "type": "str",
                            "val": "ae4d402b-e5cf-4c24-80a7-9bd7e2f87267"
                          }
                        },
                        "text": "Flow.queueId",
                        "type": "str",
                        "uiMetaData": {
                          "mode": 0
                        },
                        "metaData": {
                          "references": [
                            {
                              "id": "ae4d402b-e5cf-4c24-80a7-9bd7e2f87267",
                              "type": "str",
                              "isSysRef": false,
                              "name": "Flow.queueId"
                            }
                          ]
                        },
                        "version": 2
                      },
                      {
                        "config": {
                          "lit": {
                            "pos": 1,
                            "text": "bc57f394-501f-4987-9f58-4b90c23befc0",
                            "type": "str"
                          }
                        },
                        "text": "bc57f394-501f-4987-9f58-4b90c23befc0",
                        "type": "str",
                        "uiMetaData": {
                          "mode": 1
                        },
                        "metaData": {},
                        "version": 2
                      },
                      {
                        "config": {
                          "lit": {
                            "pos": 1,
                            "text": "true",
                            "type": "bln"
                          }
                        },
                        "text": "true",
                        "type": "bln",
                        "uiMetaData": {
                          "mode": 1
                        },
                        "metaData": {},
                        "version": 2
                      }
                    ]
                  }
                ]
              }
            },
            "metaData": {
              "references": [
                {
                  "id": "ae4d402b-e5cf-4c24-80a7-9bd7e2f87267",
                  "type": "str",
                  "isSysRef": false,
                  "name": "Flow.queueId"
                }
              ]
            },
            "version": 2
          },
          "paths": [
            {
              "label": "Yes",
              "outputId": "__YES__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "nextActionId": "9df4bca6-19c9-43e9-9ccb-d47ed03cea82",
              "label": "No",
              "outputId": "__NO__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "trackingId": 13,
          "id": "9df4bca6-19c9-43e9-9ccb-d47ed03cea82",
          "name": "End Workflow",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "EndWorkflowAction",
          "exitReason": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "str"
              }
            },
            "text": "",
            "type": "str",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2
          }
        },
        {
          "actionName": "Disconnect interaction",
          "actionId": "custom_-_f540db4a-1687-4e22-897b-71f6b4cb2f2b",
          "category": {
            "id": "Genesys Cloud Data Actions",
            "name": "Genesys Cloud Data Actions"
          },
          "useSuggestedTimeout": true,
          "nextAction": "a92b967e-e3ef-44a7-8f15-b4d2d7c2d0f4",
          "trackingId": 21,
          "id": "47ed6ea9-6a8a-4a66-be52-8fcd2baab060",
          "name": "Call Data Action",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "DataAction",
          "errorBindings": [
            {
              "name": "errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "status",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "int"
                  }
                },
                "text": "",
                "type": "int",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "correlationId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParamsMessage",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str"
                  }
                },
                "text": "",
                "type": "str",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.key",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "userParams.value",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.errorCode",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.fieldName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityId",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            },
            {
              "name": "details.entityName",
              "value": {
                "config": {
                  "emp": {
                    "pos": 1,
                    "text": "",
                    "type": "str_coll"
                  }
                },
                "text": "",
                "type": "str_coll",
                "uiMetaData": {
                  "mode": 3
                },
                "metaData": {},
                "version": 2
              }
            }
          ],
          "processingPrompt": {
            "config": {
              "emp": {
                "pos": 1,
                "text": "",
                "type": "pmt"
              }
            },
            "text": "",
            "type": "pmt",
            "uiMetaData": {
              "mode": 3
            },
            "metaData": {},
            "version": 2
          },
          "inputs": [
            {
              "name": "ConversationID",
              "value": {
                "config": {
                  "ref": {
                    "pos": 1,
                    "text": "Flow.conversationId",
                    "type": "str",
                    "val": "74a2e426-6e80-49a8-88d5-dcde6ad0fe6e"
                  }
                },
                "text": "Flow.conversationId",
                "type": "str",
                "uiMetaData": {
                  "mode": 0
                },
                "metaData": {
                  "references": [
                    {
                      "id": "74a2e426-6e80-49a8-88d5-dcde6ad0fe6e",
                      "type": "str",
                      "isSysRef": false,
                      "name": "Flow.conversationId"
                    }
                  ]
                },
                "version": 2
              }
            }
          ],
          "outputs": [],
          "timeout": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "paths": [
            {
              "label": "Success",
              "outputId": "__SUCCESS__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Failure",
              "outputId": "__FAILURE__",
              "uiMetaData": {
                "collapsed": false
              }
            },
            {
              "label": "Timeout",
              "outputId": "__TIMEOUT__",
              "uiMetaData": {
                "collapsed": false
              }
            }
          ]
        },
        {
          "nextAction": "47ed6ea9-6a8a-4a66-be52-8fcd2baab060",
          "trackingId": 22,
          "id": "5a34b8c7-a48e-4b8f-b150-78d5d3775067",
          "name": "Wait",
          "uiMetaData": {
            "collapsed": false
          },
          "__type": "WaitAction",
          "trimDurationNearMaxRunningTime": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "false",
                "type": "bln"
              }
            },
            "text": "false",
            "type": "bln",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          },
          "duration": {
            "config": {
              "lit": {
                "pos": 1,
                "text": "P0D0H1M0S0F",
                "type": "dur"
              }
            },
            "text": "P0D0H1M0S0F",
            "type": "dur",
            "uiMetaData": {
              "mode": 1
            },
            "metaData": {},
            "version": 2
          }
        }
      ],
      "variables": []
    }
  ],
  "supportedLanguageOptions": [
    {
      "language": "en-AU"
    }
  ],
  "variables": [
    {
      "id": "ae4d402b-e5cf-4c24-80a7-9bd7e2f87267",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.queueId",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "9d0b915b-28d3-405b-a00e-ffdcc3826c57",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.wrapupCode",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "fc2bc94b-b580-41b8-be95-c69cf118b947",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.wrapupNotes",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "74a2e426-6e80-49a8-88d5-dcde6ad0fe6e",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.conversationId",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "174137be-e50b-498d-94aa-e8ed7150a4d3",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.userId",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    },
    {
      "id": "f1495757-74fc-4c36-b81f-a8f1f6d55165",
      "isCollection": false,
      "isInternal": false,
      "isOutput": false,
      "isInput": true,
      "isSecure": false,
      "version": "1.0",
      "__type": "StringVariable",
      "name": "Flow.callbackScheduledTime",
      "initialValue": {
        "config": {
          "emp": {
            "pos": 1,
            "text": "",
            "type": "str"
          }
        },
        "text": "",
        "type": "str",
        "uiMetaData": {
          "mode": 3
        },
        "metaData": {},
        "version": 2
      }
    }
  ],
  "versionMetaData": {
    "inputSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Flow input schema",
      "description": "Schema defining flow input parameters.  Property names map to flow scoped variables marked as a flow input.  If you do not supply a property value for an input variable, the variable value will be set to the initial value configured on it in the flow at flow startup.",
      "definitions": {
        "archString": {
          "archDataTypeId": "str",
          "oneOf": [
            {
              "type": "null",
              "description": "A NOT_SET String value."
            },
            {
              "type": "string",
              "maxLength": 32000,
              "description": "A character string.  Examples: \"\", \"Hello\", \"Just say \\\"No!\\\"\""
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "Flow.queueId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.wrapupCode": {
          "$ref": "#/definitions/archString"
        },
        "Flow.wrapupNotes": {
          "$ref": "#/definitions/archString"
        },
        "Flow.conversationId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.userId": {
          "$ref": "#/definitions/archString"
        },
        "Flow.callbackScheduledTime": {
          "$ref": "#/definitions/archString"
        }
      },
      "additionalProperties": false
    },
    "outputSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Flow output schema",
      "description": "Schema defining flow output parameters.  Property names map to flow scoped variables marked as a flow output.",
      "type": "object",
      "properties": {},
      "additionalProperties": false
    }
  }
}